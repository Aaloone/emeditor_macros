menu = CreatePopupMenu();
符号 = CreatePopupMenu();
空格 = CreatePopupMenu();
标题 = CreatePopupMenu();
数字 = CreatePopupMenu();
VIP1 = CreatePopupMenu();
VIP = CreatePopupMenu();
段落 = CreatePopupMenu();
内容 = CreatePopupMenu();
HTML = CreatePopupMenu();
正则 = CreatePopupMenu();

/*******************************************************************************
    case编号规则:按十进制个位十位为对应二级菜单，百位千位对应一级菜单，
                 万位对应是否即使有选择也全局替换。
********************************************************************************/
menu.Add("排版脚本：自由与分享版", 1);
menu.Add("", 0, eeMenuSeparator);
menu.Add("从开头选择到光标", 2);
menu.Add("从光标选择到结尾", 3);
menu.Add("", 0, eeMenuSeparator);
menu.AddPopup("VIP章节标题（预处理）", VIP1);
VIP1.Add("使用指南：VIP章节不规范标题预处理使用", 10400);
VIP1.Add("", 0, eeMenuSeparator);
VIP1.Add("加“第章”量词：一二三 → 第一二三章", 10401);
VIP1.Add("标题内加空格：逐鹿卷第123章 → 逐鹿卷 第123章", 10402);
VIP1.Add("", 0, eeMenuSeparator);
VIP1.Add("残缺括号配对：逐鹿卷(123 → 逐鹿卷（123）", 10403);
VIP1.Add("为标题中指定位置添加括号：逐鹿卷（123）", 10404);
VIP1.Add("为标题中关键词所在字段添加括号：逐鹿卷（上）", 10405);
menu.AddPopup("标题序数整理转换", 数字);
数字.Add("使用指南：HP排版在标题行使用", 10500);
数字.Add("", 0, eeMenuSeparator);
数字.Add("第壹贰叁章 → 第一二三章", 10501);
数字.Add("第一二三章，第一百二十三章 → 第123章", 10502);
数字.Add("第一二三章 → 第一百二十三章", 10503);
数字.Add("第123章 → 第一百二十三章", 10504);
数字.Add("第1章 → 第001章", 10505);
menu.AddPopup("正文章节标题整理", 标题);
标题.Add("章节标题前插入二个空行（自定义关键词）", 10601);
标题.Add("章节标题前插入三个空行（自定义关键词）", 10602);
标题.Add("", 0, eeMenuSeparator);
标题.Add("标题前插入自定义卷名", 10603);
标题.Add("", 0, eeMenuSeparator);
标题.Add("删除标题前后空格（自定义关键词）", 10604);
标题.Add("删除标题前空行（自定义关键词）", 10605);
标题.Add("删除标题后空行（自定义关键词）", 10606);
标题.Add("删除连续重复两行的标题", 10607);
标题.Add("", 0, eeMenuSeparator);
标题.Add("标题章节量词前后插入半角空格：第一二三章 → （ 第一二三章 ）", 10608);
标题.Add("标题章节序数加“第章”量词：一二三 → 第一二三章", 10609);
menu.Add("", 0, eeMenuSeparator);
menu.AddPopup("正文内容修正（手动排版）", 内容);
内容.Add("段首插入内容（卷名，作品相关）", 700);
内容.Add("段尾插入内容（自定义）", 701);
内容.Add("", 0, eeMenuSeparator);
内容.Add("使用指南：删除无用内容使用说明举例", 702);
内容.Add("", 0, eeMenuSeparator);
内容.Add("删除不规则乱码干扰码（数字字母ascii符号组成）", 703);
内容.Add("删除含无用内容的句子（广告，网址）", 704);
内容.Add("删除含无用内容的一个段落（广告，网址）", 705);
内容.Add("删除含无用内容的多个段落（广告，网址，评论）", 706);
内容.Add("", 0, eeMenuSeparator);
内容.Add("保存换行为CR+LF", 707);
内容.Add("保存编码为ANSI（系统默认GB2312）", 708);
menu.AddPopup("段落格式整理", 段落);
段落.Add("使用指南：若用于编辑非小说文档，慎重使用", 000);
段落.Add("", 0, eeMenuSeparator);
段落.Add("规范行首（2全角空格）段首（3空行）段间（2空行）", 10800);
段落.Add("规范行首（2全角空格）段首（3空行）段间（2空行）【多级标题】", 10801);
段落.Add("段落重排（删空行，标点关键词分段，规范行首，段落间两空行）", 10802);
段落.Add("段落重排（删错误句中回车，重新分段）", 10803);
段落.Add("修正句中换行（段间有空行）", 10813);
段落.Add("删除硬回车", 10804);
段落.Add("", 0, eeMenuSeparator);
段落.Add("删除空行（含空格）", 805);
段落.Add("删除空行的空格（不含空行）", 806);
段落.Add("段落间统一为两个空行（去除空行空格）", 10807);
段落.Add("段落间加入两个空行（简单）", 10808);
段落.Add("", 0, eeMenuSeparator);
段落.Add("删除段落首尾空格", 809);
段落.Add("删除段首半角空格", 810);
段落.Add("删除段首全角空格", 811);
段落.Add("删除段尾空格", 812);
menu.AddPopup("空格格式整理", 空格);
空格.Add("使用指南：若内文中有英文句子，切勿删除所有空格", 00);
空格.Add("", 0, eeMenuSeparator);
空格.Add("删除所有空格（慎用）", 900);
空格.Add("删除所有半角空格（慎用）", 901);
空格.Add("删除所有全角空格", 902);
空格.Add("删除所有内文空格（不含行首标题空格）", 903);
空格.Add("", 0, eeMenuSeparator);
空格.Add("多个空格 → 一个半角空格", 904);
空格.Add("多个空格 → 两个全角空格", 905);
menu.AddPopup("符号整理：数字，字母，标点，空格", 符号);
符号.Add("使用指南：若用于编辑非小说文档，慎重使用", 00);
符号.Add("", 0, eeMenuSeparator);
符号.Add("文中英文全部转为小写", 1000);
符号.Add("", 0, eeMenuSeparator);
符号.Add("半角空格 → 全角空格", 1001);
符号.Add("半角标点 → 全角标点", 1002);
符号.Add("半角aA → 全角ａＡ", 1003);
符号.Add("半角123 → 全角１２３", 1004);
符号.Add("", 0, eeMenuSeparator);
符号.Add("全角空格 → 半角空格", 1005);
符号.Add("全角标点 → 半角标点", 1006);
符号.Add("全角ａＡ → 半角aA", 1007);
符号.Add("全角１２３→半角123", 1008);
符号.Add("", 0, eeMenuSeparator);
符号.Add("一二三 → 123（正文慎用）", 1009);
符号.Add("中文引号「」＆『』 → “”", 1010);
符号.Add("", 0, eeMenuSeparator);
符号.Add("规范省略号(。。。)(”。)(。…)→ …", 1011);
符号.Add("规范段首标点到上段尾", 1012);
menu.Add("", 0, eeMenuSeparator);
menu.AddPopup("HTML源代码内容修正", HTML);
HTML.Add("使用指南：HTML修正", 1100);
HTML.Add("", 0, eeMenuSeparator);
HTML.Add("删除代码（块<DIV关键词</DIV>）", 1101);
HTML.Add("删除代码（标签<META content=关键词>）", 1102);
HTML.Add("删除代码（文本链接<A href=关键词</A>）", 1103);
HTML.Add("删除代码（图片链接<IMG关键词>）", 1104);
HTML.Add("删除代码（整行<TD>关键词</TD>）", 1105);
HTML.Add("删除代码（整段<TR>关键词</TR>）", 1106);
HTML.Add("删除代码（表格<TABLE关键词</TABLE>）", 1107);
HTML.Add("删除代码（框架<IFRAME关键词</IFRAME>）", 1108);
HTML.Add("", 0, eeMenuSeparator);
HTML.Add("删除代码（广告脚本SCRIPT）", 1109);
HTML.Add("删除代码（<SPAN不可见干扰乱码</SPAN>）", 1110);
HTML.Add("删除代码（<FONT不可见干扰乱码</FONT>）", 1111);
menu.AddPopup("正则表达式使用简要说明", 正则);
正则.Add("认识正则表达式", 1200);
正则.Add("正则表达式规则", 1201);
正则.Add("正则表达式字符", 1202);
正则.Add("正则表达式符号使用须知", 1203);
正则.Add("正则表达式易犯错误", 1204);
正则.Add("正则表达式使用技巧", 1205);
正则.Add("", 0, eeMenuSeparator);
正则.Add("常见正则表达式", 1206);
正则.Add("常见描述标题的正则表达式", 1207);

result = menu.Track(0);
if (document.selection.isempty || result > 9999)
    nFlags = eeFindNext | eeReplaceAll | eeFindReplaceRegExp;
else
    nFlags = eeFindNext | eeReplaceSelOnly | eeReplaceAll | eeFindReplaceRegExp;

// Use a plugin as customized prompt  
function getTitleRegex(precomment, multiLevelTitle) {
    precomment = precomment || '';
    multiLevelTitle = multiLevelTitle || false;
    var buffer = precomment + new Array(1024 - precomment.length + 1).join( "*" );
    var bufferFlag = editor.ExecutePlugin(
            "EmeditorMacroDlg.dll",
            eePluginUserMessage,
            (((buffer.length<<1)+(multiLevelTitle?1:0))<<15)+precomment.length,
            buffer
        );
    if (bufferFlag > 0) {
        var bufferSize = bufferFlag >> 2;
        var result = {
            "title_regex" : multiLevelTitle?buffer.substring(0, bufferSize).split("\n"):buffer.substring(0, bufferSize),
            "include_inner_text" : (bufferFlag & 0x1) != 0,
            "sep_in_title_regex" : (bufferFlag & 0x2) != 0,
        };
        return result;
    }
    return null;
}

switch (result) {
    case 1:
        alert("排版脚本 For EmEditor 1.0 （hP制作）");
        break;
    case 2:
        document.selection.StartOfDocument(true);
        break;
    case 3:
        document.selection.EndOfDocument(true);
        break;
    case 900:
        //删除所有空格
        document.selection.Replace("[ 　]", "", nFlags);
        break;
    case 901:
        //删除所有半角空格
        document.selection.Replace(" ", "", nFlags);
        break;
    case 902:
        //删除所有全角空格
        document.selection.Replace("　", "", nFlags);
        break;
    case 809:
        //删除段落首尾空格
        document.selection.Replace("(^[ 　]*)|([ 　]*$)", "", nFlags);
        //删除段落首尾空格
        break;
    case 810:
        //删除段首半角空格
        document.selection.Replace("^ *", "", nFlags);
        break;
    case 811:
        //删除段首全角空格
        document.selection.Replace("^　*", "", nFlags);
        break;
    case 812:
        //删除段尾空格
        document.selection.Replace("[ 　]*$", "", nFlags);
        break;
    case 903:
        //删除所有内文空格，正文 第二部 逐鹿 第一十章 开路
        bAnswer = confirm(
            "已经排好版的文本按确定，未排版的按取消（可能有些无完整“第章”量词的标题受影响，请另行补齐“第章”量词和空格）。");
        if (bAnswer == true) {
            document.selection.Replace("^    ", "込込", nFlags);
            document.selection.Replace("^　　", "込込", nFlags);
            document.selection.Replace(
                "^\\n\\n(.*)[ 　]+([第0-9一二三四五六七八九十零〇卷部集章节回]{1,7})[ 　]+",
                "\\n\\n\\1虶虶\\2虶虶",
                nFlags);
            document.selection.Replace(
                "^\\n\\n(.*)[ 　]+([第0-9一二三四五六七八九十零〇卷部集章节回]{1,7})[ 　]+",
                "\\n\\n\\1虶虶\\2虶虶",
                nFlags);
            document.selection.Replace(
                "^\\n\\n(.*)[ 　]+([第0-9一二三四五六七八九十零〇卷部集章节回]{1,7})",
                "\\n\\n\\1虶虶\\2",
                nFlags);
            document.selection.Replace(
                "^\\n\\n([第0-9一二三四五六七八九十零〇卷部集章节回]{1,7})[ 　]+",
                "\\n\\n\\1虶虶", nFlags);
            document.selection.Replace("([a-zA-Z]+)[ 　]+", "\\1虶虶", nFlags);
            document.selection.Replace("[ 　]+([a-zA-Z]+)", "虶虶\\1", nFlags);
            document.selection.Replace("[ 　]+", "", nFlags);
            document.selection.Replace("^込込", "　　", nFlags);
            document.selection.Replace("虶虶", " ", nFlags);
        } else {
            document.selection.Replace("^    ", "込込", nFlags);
            document.selection.Replace("^　　", "込込", nFlags);
            document.selection.Replace(
                "[ 　]+(第[0-9一二三四五六七八九十零〇]{1,5}[卷部集章节回])[ 　]+", "虶虶\\1虶虶",
                nFlags);
            document.selection.Replace("[ 　]+(第[0-9一二三四五六七八九十零〇]{1,5}[卷部集章节回])",
                "虶虶\\1", nFlags);
            document.selection.Replace("(第[0-9一二三四五六七八九十零〇]{1,5}[卷部集章节回])[ 　]+",
                "\\1虶虶", nFlags);
            document.selection.Replace("([a-zA-Z]+)[ 　]+", "\\1虶虶", nFlags);
            document.selection.Replace("[ 　]+([a-zA-Z]+)", "虶虶\\1", nFlags);
            document.selection.Replace("[ 　]+", "", nFlags);
            document.selection.Replace("^込込", "　　", nFlags);
            document.selection.Replace("虶虶", " ", nFlags);
        }
        alert("请使用指南检查，若有标题中空格被删除，请用“全部替换”功能为标题相应部位添加空格");
        break;
    case 805:
        //删除空行（含空格）
        document.selection.Replace("^[ 　]*\\n", "", nFlags);
        break;
    case 700:
        //段首插入
        var insert = prompt("（默认）输入段首插入的文本", "hP");
        if (insert != "") document.selection.Replace("^.+", insert + "\\0",
            nFlags);
        break;
    case 701:
        //段尾插入
        var insert = prompt("（默认）输入段尾插入的文本", "hP")
        if (insert != "") document.selection.Replace(".+$", "\\0" + insert,
            nFlags);
        break;
    case 1010:
        //「」＆『』 → “”
        document.selection.Replace("[「『]", "“", nFlags);
        document.selection.Replace("[」』]", "”", nFlags);
        break;
    case 1002:
        //半角标点符号 → 全角标点符号
        document.selection.Replace(",", "，", eeFindNext | eeReplaceAll);
        document.selection.Replace(".", "。", eeFindNext | eeReplaceAll);
        document.selection.Replace("?", "？", eeFindNext | eeReplaceAll);
        document.selection.Replace("!", "！", eeFindNext | eeReplaceAll);
        document.selection.Replace(":", "∶", eeFindNext | eeReplaceAll);
        document.selection.Replace(";", "；", eeFindNext | eeReplaceAll);
        document.selection.Replace("(", "（", eeFindNext | eeReplaceAll);
        document.selection.Replace(")", "）", eeFindNext | eeReplaceAll);
        document.selection.Replace("┅", "…", eeFindNext | eeReplaceAll);
        document.selection.Replace("∶\x22", "∶“", eeFindNext | eeReplaceAll) //x22为引号
        document.selection.Replace("(。|？|！|…)\x22", "\\1”", eeFindNext |
            eeFindReplaceEscSeq | eeReplaceAll |
            eeFindReplaceRegExp);
        document.selection.Replace("\x22$", "”", eeFindNext |
            eeFindReplaceEscSeq | eeReplaceAll | eeFindReplaceRegExp);
        document.selection.Replace("\x22", "“", eeFindNext | eeReplaceAll);
        break;
    case 1006:
        //全角标点 → 半角标点
        document.selection.Replace("，", ",", eeFindNext | eeReplaceAll);
        document.selection.Replace("。", ".", eeFindNext | eeReplaceAll);
        document.selection.Replace("？", "?", eeFindNext | eeReplaceAll);
        document.selection.Replace("！", "!", eeFindNext | eeReplaceAll);
        document.selection.Replace("∶", ":", eeFindNext | eeReplaceAll);
        document.selection.Replace("；", ";", eeFindNext | eeReplaceAll);
        document.selection.Replace("（", "(", eeFindNext | eeReplaceAll);
        document.selection.Replace("）", ")", eeFindNext | eeReplaceAll);
        document.selection.Replace("…", "...", eeFindNext | eeReplaceAll);
        document.selection.Replace("∶", ":", eeFindNext | eeReplaceAll) //x22为引号
        document.selection.Replace("”", "\x22", eeFindNext |
            eeFindReplaceEscSeq | eeReplaceAll | eeFindReplaceRegExp);
        document.selection.Replace("“", "\x22", eeFindNext | eeReplaceAll);
        break;
    case 1007:
        //全角ａＡ → 半角 aA
        document.selection.Replace("ｑ", "q", eeFindNext | eeFindReplaceCase |
            eeReplaceAll);
        document.selection.Replace("ｗ", "w", eeFindNext | eeFindReplaceCase |
            eeReplaceAll);
        document.selection.Replace("ｅ", "e", eeFindNext | eeFindReplaceCase |
            eeReplaceAll);
        document.selection.Replace("ｒ", "r", eeFindNext | eeFindReplaceCase |
            eeReplaceAll);
        document.selection.Replace("ｔ", "t", eeFindNext | eeFindReplaceCase |
            eeReplaceAll);
        document.selection.Replace("ｙ", "y", eeFindNext | eeFindReplaceCase |
            eeReplaceAll);
        document.selection.Replace("ｕ", "u", eeFindNext | eeFindReplaceCase |
            eeReplaceAll);
        document.selection.Replace("ｉ", "i", eeFindNext | eeFindReplaceCase |
            eeReplaceAll);
        document.selection.Replace("ｏ", "o", eeFindNext | eeFindReplaceCase |
            eeReplaceAll);
        document.selection.Replace("ｐ", "p", eeFindNext | eeFindReplaceCase |
            eeReplaceAll);
        document.selection.Replace("ａ", "a", eeFindNext | eeFindReplaceCase |
            eeReplaceAll);
        document.selection.Replace("ｓ", "s", eeFindNext | eeFindReplaceCase |
            eeReplaceAll);
        document.selection.Replace("ｄ", "d", eeFindNext | eeFindReplaceCase |
            eeReplaceAll);
        document.selection.Replace("ｆ", "f", eeFindNext | eeFindReplaceCase |
            eeReplaceAll);
        document.selection.Replace("ｇ", "g", eeFindNext | eeFindReplaceCase |
            eeReplaceAll);
        document.selection.Replace("ｈ", "h", eeFindNext | eeFindReplaceCase |
            eeReplaceAll);
        document.selection.Replace("ｊ", "j", eeFindNext | eeFindReplaceCase |
            eeReplaceAll);
        document.selection.Replace("ｋ", "k", eeFindNext | eeFindReplaceCase |
            eeReplaceAll);
        document.selection.Replace("ｌ", "l", eeFindNext | eeFindReplaceCase |
            eeReplaceAll);
        document.selection.Replace("ｚ", "z", eeFindNext | eeFindReplaceCase |
            eeReplaceAll);
        document.selection.Replace("ｘ", "x", eeFindNext | eeFindReplaceCase |
            eeReplaceAll);
        document.selection.Replace("ｃ", "c", eeFindNext | eeFindReplaceCase |
            eeReplaceAll);
        document.selection.Replace("ｖ", "v", eeFindNext | eeFindReplaceCase |
            eeReplaceAll);
        document.selection.Replace("ｂ", "b", eeFindNext | eeFindReplaceCase |
            eeReplaceAll);
        document.selection.Replace("ｎ", "n", eeFindNext | eeFindReplaceCase |
            eeReplaceAll);
        document.selection.Replace("ｍ", "m", eeFindNext | eeFindReplaceCase |
            eeReplaceAll);
        document.selection.Replace("Ｑ", "Q", eeFindNext | eeFindReplaceCase |
            eeReplaceAll);
        document.selection.Replace("Ｗ", "W", eeFindNext | eeFindReplaceCase |
            eeReplaceAll);
        document.selection.Replace("Ｅ", "E", eeFindNext | eeFindReplaceCase |
            eeReplaceAll);
        document.selection.Replace("Ｒ", "R", eeFindNext | eeFindReplaceCase |
            eeReplaceAll);
        document.selection.Replace("Ｔ", "T", eeFindNext | eeFindReplaceCase |
            eeReplaceAll);
        document.selection.Replace("Ｙ", "Y", eeFindNext | eeFindReplaceCase |
            eeReplaceAll);
        document.selection.Replace("Ｕ", "U", eeFindNext | eeFindReplaceCase |
            eeReplaceAll);
        document.selection.Replace("Ｉ", "I", eeFindNext | eeFindReplaceCase |
            eeReplaceAll);
        document.selection.Replace("Ｏ", "O", eeFindNext | eeFindReplaceCase |
            eeReplaceAll);
        document.selection.Replace("Ｐ", "P", eeFindNext | eeFindReplaceCase |
            eeReplaceAll);
        document.selection.Replace("Ａ", "A", eeFindNext | eeFindReplaceCase |
            eeReplaceAll);
        document.selection.Replace("Ｓ", "S", eeFindNext | eeFindReplaceCase |
            eeReplaceAll);
        document.selection.Replace("Ｄ", "D", eeFindNext | eeFindReplaceCase |
            eeReplaceAll);
        document.selection.Replace("Ｆ", "F", eeFindNext | eeFindReplaceCase |
            eeReplaceAll);
        document.selection.Replace("Ｇ", "G", eeFindNext | eeFindReplaceCase |
            eeReplaceAll);
        document.selection.Replace("Ｈ", "H", eeFindNext | eeFindReplaceCase |
            eeReplaceAll);
        document.selection.Replace("Ｊ", "J", eeFindNext | eeFindReplaceCase |
            eeReplaceAll);
        document.selection.Replace("Ｋ", "K", eeFindNext | eeFindReplaceCase |
            eeReplaceAll);
        document.selection.Replace("Ｌ", "L", eeFindNext | eeFindReplaceCase |
            eeReplaceAll);
        document.selection.Replace("Ｚ", "Z", eeFindNext | eeFindReplaceCase |
            eeReplaceAll);
        document.selection.Replace("Ｘ", "X", eeFindNext | eeFindReplaceCase |
            eeReplaceAll);
        document.selection.Replace("Ｃ", "C", eeFindNext | eeFindReplaceCase |
            eeReplaceAll);
        document.selection.Replace("Ｖ", "V", eeFindNext | eeFindReplaceCase |
            eeReplaceAll);
        document.selection.Replace("Ｂ", "B", eeFindNext | eeFindReplaceCase |
            eeReplaceAll);
        document.selection.Replace("Ｎ", "N", eeFindNext | eeFindReplaceCase |
            eeReplaceAll);
        document.selection.Replace("Ｍ", "M", eeFindNext | eeFindReplaceCase |
            eeReplaceAll);
        break;
    case 1004:
        //半角123→全角１２３
        document.selection.Replace("1", "１", eeFindNext | eeReplaceAll);
        document.selection.Replace("2", "２", eeFindNext | eeReplaceAll);
        document.selection.Replace("3", "３", eeFindNext | eeReplaceAll);
        document.selection.Replace("4", "４", eeFindNext | eeReplaceAll);
        document.selection.Replace("5", "５", eeFindNext | eeReplaceAll);
        document.selection.Replace("6", "６", eeFindNext | eeReplaceAll);
        document.selection.Replace("7", "７", eeFindNext | eeReplaceAll);
        document.selection.Replace("8", "８", eeFindNext | eeReplaceAll);
        document.selection.Replace("9", "９", eeFindNext | eeReplaceAll);
        document.selection.Replace("0", "０", eeFindNext | eeReplaceAll);
        break;
    case 1003:
        //半角aA转全角ａＡ
        document.selection.Replace("q", "ｑ", eeFindNext | eeFindReplaceCase |
            eeReplaceAll);
        document.selection.Replace("w", "ｗ", eeFindNext | eeFindReplaceCase |
            eeReplaceAll);
        document.selection.Replace("e", "ｅ", eeFindNext | eeFindReplaceCase |
            eeReplaceAll);
        document.selection.Replace("r", "ｒ", eeFindNext | eeFindReplaceCase |
            eeReplaceAll);
        document.selection.Replace("t", "ｔ", eeFindNext | eeFindReplaceCase |
            eeReplaceAll);
        document.selection.Replace("y", "ｙ", eeFindNext | eeFindReplaceCase |
            eeReplaceAll);
        document.selection.Replace("u", "ｕ", eeFindNext | eeFindReplaceCase |
            eeReplaceAll);
        document.selection.Replace("i", "ｉ", eeFindNext | eeFindReplaceCase |
            eeReplaceAll);
        document.selection.Replace("o", "ｏ", eeFindNext | eeFindReplaceCase |
            eeReplaceAll);
        document.selection.Replace("p", "ｐ", eeFindNext | eeFindReplaceCase |
            eeReplaceAll);
        document.selection.Replace("a", "ａ", eeFindNext | eeFindReplaceCase |
            eeReplaceAll);
        document.selection.Replace("s", "ｓ", eeFindNext | eeFindReplaceCase |
            eeReplaceAll);
        document.selection.Replace("d", "ｄ", eeFindNext | eeFindReplaceCase |
            eeReplaceAll);
        document.selection.Replace("f", "ｆ", eeFindNext | eeFindReplaceCase |
            eeReplaceAll);
        document.selection.Replace("g", "ｇ", eeFindNext | eeFindReplaceCase |
            eeReplaceAll);
        document.selection.Replace("h", "ｈ", eeFindNext | eeFindReplaceCase |
            eeReplaceAll);
        document.selection.Replace("j", "ｊ", eeFindNext | eeFindReplaceCase |
            eeReplaceAll);
        document.selection.Replace("k", "ｋ", eeFindNext | eeFindReplaceCase |
            eeReplaceAll);
        document.selection.Replace("l", "ｌ", eeFindNext | eeFindReplaceCase |
            eeReplaceAll);
        document.selection.Replace("z", "ｚ", eeFindNext | eeFindReplaceCase |
            eeReplaceAll);
        document.selection.Replace("x", "ｘ", eeFindNext | eeFindReplaceCase |
            eeReplaceAll);
        document.selection.Replace("c", "ｃ", eeFindNext | eeFindReplaceCase |
            eeReplaceAll);
        document.selection.Replace("v", "ｖ", eeFindNext | eeFindReplaceCase |
            eeReplaceAll);
        document.selection.Replace("b", "ｂ", eeFindNext | eeFindReplaceCase |
            eeReplaceAll);
        document.selection.Replace("n", "ｎ", eeFindNext | eeFindReplaceCase |
            eeReplaceAll);
        document.selection.Replace("m", "ｍ", eeFindNext | eeFindReplaceCase |
            eeReplaceAll);
        document.selection.Replace("Q", "Ｑ", eeFindNext | eeFindReplaceCase |
            eeReplaceAll);
        document.selection.Replace("W", "Ｗ", eeFindNext | eeFindReplaceCase |
            eeReplaceAll);
        document.selection.Replace("E", "Ｅ", eeFindNext | eeFindReplaceCase |
            eeReplaceAll);
        document.selection.Replace("R", "Ｒ", eeFindNext | eeFindReplaceCase |
            eeReplaceAll);
        document.selection.Replace("T", "Ｔ", eeFindNext | eeFindReplaceCase |
            eeReplaceAll);
        document.selection.Replace("Y", "Ｙ", eeFindNext | eeFindReplaceCase |
            eeReplaceAll);
        document.selection.Replace("U", "Ｕ", eeFindNext | eeFindReplaceCase |
            eeReplaceAll);
        document.selection.Replace("I", "Ｉ", eeFindNext | eeFindReplaceCase |
            eeReplaceAll);
        document.selection.Replace("O", "Ｏ", eeFindNext | eeFindReplaceCase |
            eeReplaceAll);
        document.selection.Replace("P", "Ｐ", eeFindNext | eeFindReplaceCase |
            eeReplaceAll);
        document.selection.Replace("A", "Ａ", eeFindNext | eeFindReplaceCase |
            eeReplaceAll);
        document.selection.Replace("S", "Ｓ", eeFindNext | eeFindReplaceCase |
            eeReplaceAll);
        document.selection.Replace("D", "Ｄ", eeFindNext | eeFindReplaceCase |
            eeReplaceAll);
        document.selection.Replace("F", "Ｆ", eeFindNext | eeFindReplaceCase |
            eeReplaceAll);
        document.selection.Replace("G", "Ｇ", eeFindNext | eeFindReplaceCase |
            eeReplaceAll);
        document.selection.Replace("H", "Ｈ", eeFindNext | eeFindReplaceCase |
            eeReplaceAll);
        document.selection.Replace("J", "Ｊ", eeFindNext | eeFindReplaceCase |
            eeReplaceAll);
        document.selection.Replace("K", "Ｋ", eeFindNext | eeFindReplaceCase |
            eeReplaceAll);
        document.selection.Replace("L", "Ｌ", eeFindNext | eeFindReplaceCase |
            eeReplaceAll);
        document.selection.Replace("Z", "Ｚ", eeFindNext | eeFindReplaceCase |
            eeReplaceAll);
        document.selection.Replace("X", "Ｘ", eeFindNext | eeFindReplaceCase |
            eeReplaceAll);
        document.selection.Replace("C", "Ｃ", eeFindNext | eeFindReplaceCase |
            eeReplaceAll);
        document.selection.Replace("V", "Ｖ", eeFindNext | eeFindReplaceCase |
            eeReplaceAll);
        document.selection.Replace("B", "Ｂ", eeFindNext | eeFindReplaceCase |
            eeReplaceAll);
        document.selection.Replace("N", "Ｎ", eeFindNext | eeFindReplaceCase |
            eeReplaceAll);
        document.selection.Replace("M", "Ｍ", eeFindNext | eeFindReplaceCase |
            eeReplaceAll);
        break;
    case 707:
        //CR+LF
        bAnswer = confirm("是否更改换行为CR+LF（Windows）？");
        if (bAnswer == true) {
            editor.ExecuteCommandByID(4105);
        }
        break;
    case 708:
        //ANSI
        bAnswer = confirm("是否更改编码为ANSI（系统默认GB2312）？");
        if (bAnswer == true) {
            editor.ExecuteCommandByID(4102);
        }
        break;
    case 1201:
        //正则表达式规则
        alert(
            "使用一系列的特殊字符来获取字符串，提供与预期的搜索结果匹配的确切文本来进行字符串的搜索和替换操作。\n\n正则表达式从某种意义上可说是一种语言, 通过简短的一行代码即可以精确描述要匹配的复杂文本。\n\n正则表达式是普通字符和元字符组合的一种模式。它的结构与算术表达式的结构类似, 各种元字符和运算符可以将小的表达式组合起来，创建大的表达式。通过在一对分隔符之间放置表达式模式的各种组件，就可以构建正则表达式。"
        );
        break;
    case 1202:
        //正则表达式字符
        alert(
            "emeditor的替换窗口，选中使用正则表达式，在上面的两个输入框的右侧都有一个向右的箭头，点击就会打开特殊字符列表。\n\n1. 特殊字符是指\n( . * ? + ( ) { } [ ] ^ $ \ ) \n2.普通字符，是指除了特殊字符之外的所有其他字符。\n而这些特殊字符也可以通过前面加上\\前缀而变为普通字符。\n\n \. 匹配除换行符（\\n）之外的任何单个字符。 \n( ) 括号表达式。 \n[ ] 中括号表达式。\n在方括号内包含一个或多个字符。普通字符在中括号内表示本身，大多数特殊字符在中括号内作为普通字符。\n除了转义字符\\, (要包含\\, 需要使用\\\) \n可以用连字符 '-' 将范围中的开始字符和结束字符分开。单个字符的字符值确定范围内的相对顺序。\n如果需要匹配不属于列表或范围内的任何字符，可以在列表开头加上\^前缀。\n中括号表达式还可进行组合, 如 [A-Za-z0-9] 匹配A-Z, a-z, 0-9 。\n\n字符\\ 将下一字符标记为特殊字符、文本、反向引用或八进制转义符。\n例如，字符 n 匹配字符 n。\\n 匹配换行符。 \\\\ 匹配 \\， \\\( 匹配 \(。 \n\n\| 替换字符, 对\|左右的两个项分别匹配进行选择。或者说, 就是逻辑的OR的概念 \n\n{ } 标记限定符表达式。 指定正则表达式的某个部分必须出现的次数。\n * 零次或多次匹配前面的字符或子表达式。 \n+ 一次或多次匹配前面的字符或子表达式。\n? 零次或一次匹配前面的字符或子表达式。\n{n} n 是非负整数。匹配 n 次。 \n{n,} n 是非负整数。至少匹配 n 次。 \n{n,m} m 和 n 是非负整数，其中 n <= m。至少匹配 n 次，至多匹配 m 次。"
        );
        break;
    case 1200:
        //认识正则表达式
        alert(
            "排版脚本中使用正则表达式来进行批量化的文本替换处理，首先编辑脚本语言，会打开编辑界面。这里的文本，就是使用脚本规范编写。其中的一行一行的公式才是使用了正则表达式。\n例如：\n document\.selection\.Replace\(\"\^\.\+\"\,\"a\\\\0b\",nFlags\);//给\n括号内加引号的部分\(\"\.\+\"\,\"  \\\\0  \"\)才是正则表达式。\n其中\^表示从行首开始，\.表示任意字符，\+表示重复前一个字符至少一次，\\\\0表示前面表达式获取的所有内容。\n document\.selection\.Replace的意思就是把括号内左引号部分表达式替换为右引号表达式部分。\n左表达式获取一行中所有内容，右表达式则把获取的整个内容的左边加上a，右边加上b。\n\n现在我们就可以使用复制粘贴，建立一行一行的表达式了。从一个case开始，到break;结束，中间的内容都大同小异，我们所要更改的就是引号内的正则表达式。\n用各种正则表达式的特殊符号，来捕获成为获取按一定规则构成的一系列字符或句子。\n\n具体要多看多揣摩已有的脚本。"
        );
        break;
    case 1203:
        //正则表达式符号使用须知
        alert(
            "1.左表达式必须用\\\\来引用特殊字符，而右表达式中所有特殊字符都可以作为普通字符使用。\n但是不要滥用\\\\，如果在普通字符前用\\\\会导致错误。\n\n2.要在表达式中使用半角双引号只能用“\\x22”代替。对于其他特殊字符也可以使用\\xnn 引用ASCII代码中编号为nn（两位十六进制0-255）的字符。 \n\n3.正则表达式中不需要反斜杠引用直接可以使用的半角普通符号：<>'-;\n\n4.特殊符号必须使用双斜杠\\\\来取消这些字符的特殊意义转换成普通符号：|\()^$.*+{}[]?\n\n5.全角符号可以在表达式中直接引用。\n\n6.使用\\unnnn 引用ASCII代码中编号为nnnn（四位十六进制）的字符。\n匹配中文字符的正则表达式： [\\u4e00-\\u9fa5]（其中编号为ASCII代码中中文的起始和结尾两个字的编码）\n匹配双字节字符(包括汉字在内)：[^\\x00-\\xff]\n"
        );
        break;
    case 1204:
        //正则表达式易犯错误
        alert(
            "1.\[\-\]中要引用\-必须使用\[\\-\]，否则被当作字符范围了。\n2.（.*）和（.+）的区别，前一个是至少有零个字符，后一个至少有一个字符，在某些场合是很重要的区分。经常容易混淆导致出错，所以要经过反复测试。\n3.\. 不匹配除换行符 \n4.\^表示从行首开始，但如果要捕获的内容只是看上去从行首开始，却会导致出错。\n5.对于操作符如“\\n”，在表达式中要写成双斜杠“\\\\n”，第一个斜杠表示后面是特殊字符或操作符，特殊字符只使用单斜杠“\\”即可。在表达式右侧特殊字符可以不用斜杠，直接当作普通字符。\n5.使用\\\\0会获取前面引号内的整个表达式，而不是仅仅在括号内的子表达式。"
        );
        break;
    case 1205:
        //正则表达式使用技巧
        alert(
            "1.在使用脚本的时候，在弹出的大多数对话框中，可以使用正则表达式。特别是输入关键词的时候，使用（.+）来间隔第二个关键词。使用（[^ ]+）表示用非空格字符来作为间隔。使用中括号表达式（[卷章回节集部册]）来引用定义范围内的关键词。\n\n2.(集|册|部|卷|章|回|节)和[卷章回节集部册]是一样的。括号表达式用“|”表示“或者”，中括号表达式不需要任何符号表示包括，使用“^”表示不包括。\n\n3.\\(.*\\)匹配括号中的字“（上）”。\n\n4.（.+）表示至少有一个任意字符，（.*）表示至少有零个任意字符。"
        );
        break;
    case 1206:
        //常见正则表达式
        alert(
            "“[^ ]*关键词.*”，或“第[0-9一二三四五六七八九十两百千零〇]{1,7}[册集部卷章回节]”//匹配非空格+关键词+任意字符或者第xx章（xx为非空格字符至少有一个最多为五个）。\n\n document\.selection\.Replace\(\"　\"\,\" \"\,nFlags\)\;//全角改成半角空格\n\ndocument\.selection\.Replace\(\"\^\\\\n\"\,\"\"\,nFlags\)\;//删除空行\n\ndocument\.selection\.Replace\(\"\^\(\.\+\)\\\\n\\ \\1\"\,\"\\ \\1\"\,nFlags\)\;//删除重复行\n\ndocument\.selection\.Replace\(\"\^Copyright \.\+\\\\n\.\+\\\\n\.\+\\\\n\.\+\"\,\"\"\,nFlags\)\;//删除Copyright所在行及其下三行的内容\n\ndocument\.selection\.Replace\(\"\(\[\^\"\+separator\+\"\]\)\\\\n\"\,\"\\ \\1\"\,nFlags\)\;//标点分段\n\ndocument\.selection\.Replace\(\"\(\^\[ 　\]\*\)\|\(\[ 　\]\*\$\)\"\,\"\"\,nFlags\)\;//删除段落首尾空格"
        );
        break;
    case 1207:
        //常见标题正则表达式
        alert(
            "1.“第[^ ]{1,5}[册集部卷章回节]”//匹配非空格+关键词+任意字符或者第xx章（xx为非空格字符至少有一个最多为五个）。\n使用指南：有可能出现“状元及第的陈焕章”这种情况导致错误，需要手动处理，或者改用更详细的表达式。\n\n“第[0-9一二三四五六七八九十两百千零〇]{1,7}[册集部卷章回节]”\n\n2.“[一二三四五六七八九十两零百]+、”对应于：“一十、”\n\n3.“[0-9]\\\\.”对应于“10.”\n"
        );
        break;
    case 10505:
        //第1章 → 第001章
        alert("本功能只针对“第xx(集|册|部|卷|章|回|节)”这种格式的标题。");
        document.selection.Replace("(第)(\\d)([册集部卷章回节])", "\\100\\2\\3", nFlags);
        document.selection.Replace("(第)(\\d\\d)([册集部卷章回节])", "\\10\\2\\3",
            nFlags);
        break;
    case 10800:
        //删除空行
        document.selection.Replace("^[ 　]+\\n", "", nFlags);
        //段首二全角空格
        document.selection.Replace("^([^ 　]+)", "　　\\1", nFlags);
        document.selection.Replace("^[ 　]+", "　　", nFlags);
        //删除空行（原无空格情况）
        document.selection.Replace("^\\n", "", nFlags);
        var config = getTitleRegex("去掉标题前空格，增加文首三空行，段间两空行，输入标题表达式（或.*关键词.*），否则取消。")
        if (config != null) {
            var title = config["title_regex"];
            if (config["include_inner_text"])
                document.selection.Replace("^(　　[^\\s](.*?))(?=内容简介|作品相关|正文|楔子|序[册集部卷章回节]{0,1}|" + title + ")", "\\1\\n", nFlags);　
            var target = config["sep_in_title_regex"]?"\\1\\3":"\\1　\\3";
            //标题格式整理
            document.selection.Replace("^　　(" + title + ")([　 ]*)(.*)$", target, nFlags);　　
            document.selection.Replace("^　　(" + "内容简介|作品相关|正文|楔子)([　 ]*)(.*)$", "\\1　\\3", nFlags);
            document.selection.Replace("^　　(" + "序[册集部卷章回节]{0,1})([　 ]*)(.*)$", target, nFlags);
            document.selection.Replace("　$", "", nFlags);
            //段间空行
            document.selection.Replace("^([ 　]*)(" + config["title_regex"] + ")(.*)$", "\\n\\n\\2\\3", nFlags);
        }
        //删除段尾空格
        document.selection.Replace("[ 　]+$", "", nFlags);
        document.selection.Replace("([^ ]+)\\n\\n\\n\\n([^ ]+)",
            "\\1\\n\\n\\n\\2", nFlags);
        document.selection.Replace("([^ ]+)\\n\\n([^ ]+)", "\\1\\n\\2", nFlags);
        break;
    case 10801:
        document.selection.Replace("^[ 　]+\\n", "", nFlags);
        //段首二全角空格
        document.selection.Replace("^([^ 　]+)", "　　\\1", nFlags);
        document.selection.Replace("^[ 　]+", "　　", nFlags);
        //删除空行（原无空格情况）
        document.selection.Replace("^\\n", "", nFlags);
        var config = getTitleRegex("去掉标题前空格，增加文首三空行，段间两空行，输入各级标题表达式（或.*关键词.*），否则取消。", true)
        if (config != null) {
            var titlelevelnum = config["title_regex"].length;
            
            var splitRegex = config["include_inner_text"]?"^(　　.*?)":"";
            var findRegex = config["include_inner_text"]?"^　　.*?(?!\\n)":"^　　(?!\\n)";
            for (var i = 0; i < titlelevelnum - 1; ++i)
            {
                splitRegex += "((" + config["title_regex"][i] + ")[　 ]*(.*?)(?=(" + config["title_regex"][i+1] + ")?))?";
                findRegex += "((" + config["title_regex"][i] + ")[　 ]*(.*?))?";
            }
            splitRegex += "((" + config["title_regex"][titlelevelnum-1] + ")[　 ]*(.*))?\n";
            splitRegex = new RegExp(splitRegex);
            findRegex += "((" + config["title_regex"][titlelevelnum-1] + ")[　 ]*(.*))?\\n";
            
            var titlesep = config["sep_in_title_regex"]?"":"　";
            var offset = config["include_inner_text"]?3:2;
            previousTitle = new Array(titlelevelnum);
            lastleveltitlehandled = true;
            
            document.selection.StartOfDocument();
            while(document.selection.Find(findRegex, eeFindReplaceRegExp | eeFindNext))
            {
                m = document.selection.Text.match(splitRegex);

                target = (config["include_inner_text"] && m[1] != "　　")?m[1] + "\n":"";
                target += lastleveltitlehandled?"\n\n":"";

                for (var i = 0; i < titlelevelnum; ++i)
                {
                    if (m[4*i+offset] != "" && m[4*i+offset] != previousTitle[i])
                    {
                        target += m[4*i+offset] + titlesep + m[4*i+offset+1] + "\n";
                        previousTitle[i] = m[4*i+offset];
                        lastleveltitlehandled = (i == titlelevelnum - 1);
                    }
                    else
                        lastleveltitlehandled = false;
                }
                document.selection.Text = target
            }
        }
        document.selection.Replace("[ 　]+$", "", nFlags);
        document.selection.Replace("([^ ]+)\\n\\n\\n\\n([^ ]+)",
        "\\1\\n\\n\\n\\2", nFlags);
        document.selection.Replace("([^ ]+)\\n\\n([^ ]+)", "\\1\\n\\2", nFlags);
        break;
    case 10604:
        //删除标题前后空格
        var result = getTitleRegex("（默认）输入标题的表达式（.*关键词.*），或“册集部卷章回节”放入下面。") //prompt("（默认）输入标题的表达式（.*关键词.*），或“册集部卷章回节”放入下面。", "第[0-9一二三四五六七八九十两百千零〇]{1,7}[册集部卷章回节]");
        if (result != null) {
            var title = config["title_regex"];
            document.selection.Replace("[ 　]+(" + title + ")", "\\1", nFlags);
            document.selection.Replace("(" + title + ")[ 　]+", "\\2 ", nFlags);
            document.selection.Replace(" 　", " ", nFlags);
            document.selection.Replace("　 ", " ", nFlags);
            document.selection.Replace("[ ]+", " ", nFlags);
            document.selection.Replace("^[ 　]+([^ 　]+) (.*)(" + title +
                ")(.*) ([^ 　]+)[ 　]+$", "\\1 \\2\\3\\4 \\5",
                nFlags);
            document.selection.Replace("^[ 　]+([^ 　]+)(.*)(" + title +
                ")[ 　]+$", "\\1\\2\\3", nFlags);
            document.selection.Replace("^[ 　]+(" + title + ")[ 　]+$", "\\1",
                nFlags);
            document.selection.Replace("^[ 　]+(" + title +
                ")(.*)([^ 　]+)[ 　]+$", "\\1\\2\\3", nFlags);
        }
        break;
    case 1005:
        //替换全角空格为半角空格
        bAnswer = confirm("警告：如果已经排好版面，行首加了空格，请勿使用。");
        if (bAnswer == true) {
            document.selection.Replace("[　]+", " ", nFlags);
        }
        break;
    case 1001:
        //替换半角空格为全角空格
        bAnswer = confirm("警告：如果已经排好版面，请勿使用。");
        if (bAnswer == true) {
            document.selection.Replace("[ ]+", "　", nFlags);
            document.selection.Replace("[　]+", "　　", nFlags);
        }
        break;
    case 10607:
        //删除重复标题
        alert("使用本功能有可能导致错误删除，请慎用。\n例如：\n第四部\n机械工业部第四部下属单位");
        var title = prompt("（默认）输入标题的表达式（.*关键词.*）",
            "第[0-9一二三四五六七八九十两百千零〇]{1,7}[册集部卷章回节]")
        if (title != "") {
            document.selection.Replace("(" + title + ")\\n(" + title + ")\\n",
                "\\1\\n", nFlags);
            document.selection.Replace("(" + title + ")\\n("　　 + title + ")\\n",
                "\\1\\n", nFlags);
            document.selection.Replace("(.*)(" + title + ")(.*)\\n{1,3}(.*)(" +
                title + ")(.*)\\n", "\\1\\2\\3\\n",
                nFlags);
        }
        break;
    case 904:
        //统一所有空格为一个半角空格
        bAnswer = confirm("警告：如果已经排好版面，请勿使用。");
        if (bAnswer == true) {
            document.selection.Replace("[ 　]+$", "", nFlags);
            document.selection.Replace("[ 　]+", " ", nFlags);
        }
        break;
    case 905:
        //统一所有空格为两个全角空格
        bAnswer = confirm("警告：如果已经排好版面，请勿使用。");
        if (bAnswer == true) {
            document.selection.Replace("[ 　]+$", "", nFlags);
            document.selection.Replace("[ 　]+", "　　", nFlags);
        }
        break;
    case 806:
        //删除空行的空格，不含空行
        document.selection.Replace("^[ 　]*$", "", nFlags);
        break;
    case 10804:
        //删除硬回车
        document.selection.Replace("^[ ]+\\n", "", nFlags);
        bAnswer = confirm(
            "请事先将半角标点转为全角标点，以便更好的处理。\n按确定，删除所有空行，能够全面删除硬回车，适合单独一篇内容。\n按取消，保留原有空行，适合已排好版的多篇内容，或许有遗漏。\n\n可能对于某些内文分段的小标题会有错误处理，慎重处理。\n\n例如：效果迅速而神奇。四、它对心脑血管系统有作用\n在“四”前面要换行处理。输入相应的正则表达式即可。\n“[一二三四五六七八九十两零百]+、”对应于：“一十、”\n“[0-9]\\.”对应于“10.”\n"
        );
        if (bAnswer == true) {
            document.selection.Replace("^\\n", "", nFlags);
            document.selection.Replace(" \\n([^　])", "\\1", nFlags);
        } else {
            document.selection.Replace(" \\n([^　])", "\\1", nFlags);
        }
        document.selection.Replace("([^ 　*]+)\\n([^ 　])", "\\1\\2", nFlags);
        var title = prompt("在小标题前增加换行，标题的表达式（或.*关键词.*），否则取消。",
            "第[0-9一二三四五六七八九十两百千零〇]{1,7}[册集部卷章回节]，或，[一二三四五六七八九十两零百]+、");
        if (title != "") {
            document.selection.Replace("(" + title + ")", "\\n\\1", nFlags);
        }
        break;
    case 10802:
        //段落重排
        var separator = prompt("若已将半角标点转为全角，（默认）输入分段依据的字符或关键词。", "[。：？！…]");
        if (separator != "") {
            document.selection.Replace("　　", "\\n\\0", nFlags);
            document.selection.Replace("(^[ 　]*)|([ 　]*$)", "", nFlags);
            //去段首尾空格
            document.selection.Replace("(" + separator + ")", "\\1\\n", nFlags);
            //标点分段
            document.selection.Replace("\\n[ 　]*([，。：？！…“”）》—])", "\\1", nFlags);
            //去段首标点
            document.selection.Replace("…\\n…", "……", nFlags);
            document.selection.Replace("([，、；《（])([^" + separator + "]*)\\n",
                "\\1\\2", nFlags);
            document.selection.Replace("“([^”]+)\\n", "“\\1", nFlags);
            document.selection.Replace("\\n([^“]+)”", "\\1”", nFlags);
            document.selection.Replace("？\\n([^ ]+）)”", "\\1”", nFlags);
            document.selection.Replace("·", "\\n·", nFlags);
        }
        document.selection.Replace("^(.+)", "　　\\1", nFlags);
        //段首加空格
        bAnswer = confirm("按确定去掉文中所有空行（慎用），按取消可以事后手动删除不必要的空行。");
        if (bAnswer == true) {
            document.selection.Replace("^\\n", "", nFlags);
        }
        document.selection.Replace("([^　]+)　　([^　]+)", "\\1\\n\\2", nFlags);
        var title = prompt("在段间增加两空行，（默认）输入标题的表达式（或.*关键词.*），否则取消。",
            "第[0-9一二三四五六七八九十两百千零〇]{1,7}[册集部卷章回节]");
        if (title != "") {
            document.selection.Replace("^(.*)(" + title + ")(.*)$", "\\n\\n\\0",
                nFlags);
        }
        break;
    case 10803:
        //段落重排（删错误回车，重新分段）
        document.selection.Replace("^\\n\\n", "【临时标记】", nFlags);
        document.selection.Replace("([^ 　]+)\\n([^ 　]+)", "\\1\\2", nFlags);
        document.selection.Replace("([^ 　]+)\\n([^ 　]+)", "\\1\\2", nFlags);
        document.selection.Replace("([^ 　]+)\\n([^ 　]+)", "\\1\\2", nFlags);
        document.selection.Replace("([^ 　]+)\\n([^ 　]+)", "\\1\\2", nFlags);
        document.selection.Replace("([^ 　]+)\\n([^ 　]+)", "\\1\\2", nFlags);
        document.selection.Replace("([^ 　]+)\\n([^ 　]+)", "\\1\\2", nFlags);
        document.selection.Replace("([^ 　]+)\\n([^ 　]+)", "\\1\\2", nFlags);
        document.selection.Replace("([^ 　]+)[ 　]+", "\\1\\n　　", nFlags);
        document.selection.Replace("【临时标记】", "\\n\\n\\n", nFlags);
        break;
    case 10807:
        //段落间统一为两个空行（去除空格）
        document.selection.Replace("^[ 　]+\\n", "", nFlags);
        //去空行
        document.selection.Replace("(.+)\\n\\n(.+)", "\\1\\n\\2", nFlags);
        document.selection.Replace("^\\n\\n\\n\\n\\n", "\\n\\n", nFlags);
        document.selection.Replace("^\\n\\n\\n\\n", "\\n\\n", nFlags);
        document.selection.Replace("^\\n\\n\\n", "\\n\\n", nFlags);
        document.selection.Replace("(.+)\\n\\n(.+)", "\\1\\n\\2", nFlags);
        var title = prompt("在段间增加两空行，（默认）输入标题的表达式（或.*关键词.*），否则取消。",
            "第[0-9一二三四五六七八九十两百千零〇]{1,7}[册集部卷章回节]");
        if (title != "") {
            document.selection.Replace("^\\n", "", nFlags);
            document.selection.Replace("^(.*)(" + title + ")(.*)$", "\\n\\n\\0",
                nFlags);
        }
        break;
    case 10808:
        //段落间加入两个空行
        var title = prompt("（默认）输入标题的表达式（或自行输入.*关键词.*），否则取消。",
            "第[0-9一二三四五六七八九十两百千零〇]{1,7}[册集部卷章回节]");
        if (title != "") {
            document.selection.Replace("^\\n", "", nFlags);
            document.selection.Replace("^(.*)(" + title + ")(.*)$", "\\n\\n\\0",
                nFlags);
        }
        break;
    case 1012:
        //规范段首标点到上段尾
        bAnswer = confirm("半角标点先要转换为全角标点，以便更有效处理。");
        if (bAnswer == true) {
            document.selection.Replace("(^.*)\\n^[ 　]*\\”", "\\1”", nFlags);
            document.selection.Replace("(^.*)\\n^[ 　]*\\。", "\\1。", nFlags);
            document.selection.Replace("(^.*)\\n^[ 　]*\\）", "\\1）", nFlags);
            document.selection.Replace("(^.*)\\n^[ 　]*\\】", "\\1】", nFlags);
            document.selection.Replace("(^.*)\\n^[ 　]*\\；", "\\1；", nFlags);
            document.selection.Replace("(^.*)\\n^[ 　]*\\，", "\\1，", nFlags);
            document.selection.Replace("(^.*)\\n^[ 　]*\\？", "\\1？", nFlags);
            document.selection.Replace("(^.*)\\n^[ 　]*\\：", "\\1：", nFlags);
        } else {
            break;
        }
        break;
    case 1011:
        //规范省略号
        document.selection.Replace("。。。", "…", nFlags);
        document.selection.Replace("。。", "…", nFlags);
        document.selection.Replace("。…", "…", nFlags);
        document.selection.Replace("…。", "…", nFlags);
        document.selection.Replace("[……]+", "……", nFlags);
        document.selection.Replace("”…", "”\n……", nFlags);
        document.selection.Replace("[………]+", "……", nFlags);
        document.selection.Replace("[^…][…][^…]", "……", nFlags);
        break;
    case 10609:
        //标题加章节量词
        bAnswer = confirm(
            "1.有可能把标题内容误作标题序数（比如“十二章 天下第一”，会处理为“第十二章 天下第一章”），使用指南检查。\n2.处理对象必须是已经排好版分好段的内容。而且标题中的各个词之间已加好空格，标题前无空格。（比如“十二章天下第一”，要处理为“十二章 天下第一”）\n3.\n\n按确定，自动分析序数，添加“第章”量词。\n按取消，手动给标题中的指定位置添加“第章”量词。"
        );
        if (bAnswer == true) {
            var title = prompt("（默认）输入标题中序数的关键词，表达式。",
                "[0-9一二三四五六七八九十两百零〇]{1,5}");
            if (title != "") {
                document.selection.Replace("^\\n\\n([^ 　第0-9一二三四五六七八九十两百零〇]*)(" +
                    title + ")([^集部卷章节回]*)",
                    "\\n\\n\\1 第\\2章\\3", nFlags);
                document.selection.Replace("^\\n\\n([^ 　第0-9一二三四五六七八九十两百零〇]*)(" +
                    title + ")([集部卷章节回])",
                    "\\n\\n\\1 第\\2\\3",
                    nFlags);
            }
        } else {
            var title = prompt("（默认）输入需要添加的一个量词“章回节”。", "章") //
            if (title != "") {
                var insert = prompt("要给以空格分开的标题的第几个词加“第章”量词（卷六 织网 一一）。",
                    "在此输入1-5之间的数字");
                if (insert == 1) {
                    document.selection.Replace("^([^ 　]+)", "\\第\\1" + title +
                        "", nFlags);
                    //加“第章”，加空格
                }
                if (insert == 2) {
                    document.selection.Replace("^([^ 　]+) ([^ 　]+)",
                        "\\\\1 第\\2" + title + "", nFlags);
                }
                if (insert == 3) {
                    document.selection.Replace("^([^ 　]+) ([^ 　]+) ([^ 　]+)",
                        "\\\\1 \\2 第\\3" + title + "",
                        nFlags);
                }
                if (insert == 4) {
                    document.selection.Replace(
                        "^([^ 　]+) ([^ 　]+) ([^ 　]+) ([^ 　]+)",
                        "\\\\1 \\2 \\3 第\\4" + title +
                        "",
                        nFlags);
                }
                if (insert == 5) {
                    document.selection.Replace(
                        "^([^ 　]+) ([^ 　]+) ([^ 　]+) ([^ 　]+) ([^ 　]+)",
                        "\\\\1 \\2 \\3 \\4 第\\5" + title + "",
                        nFlags);
                }
            }
        }
        document.selection.Replace("第第", "第", nFlags);
        //去“第”
        document.selection.Replace("第第", "第", nFlags);
        //去“第”
        document.selection.Replace("章章", "章", nFlags);
        //去“章”
        document.selection.Replace("章章", "章", nFlags);
        //去“章”
        document.selection.Replace("章节", "节", nFlags);
        document.selection.Replace("章回", "回", nFlags);
        document.selection.Replace("章卷", "卷", nFlags);
        document.selection.Replace("章部", "部", nFlags);
        document.selection.Replace("第章", "第", nFlags);
        document.selection.Replace("^[ ]+", "", nFlags);
        break;
    case 10601:
        //标题前插入二个空行
        var title = prompt("（默认）输入标题的关键词（第一个字词），下面方括号中可用“册集部卷章回节”。",
            "第[0-9一二三四五六七八九十两百零〇]{1,5}[部]");
        if (title != "") {
            document.selection.Replace("^(" + title + ")(.*)$\\n",
                "\n\n\\1\\2\n", nFlags);
            document.selection.Replace("^ +$", "", nFlags);
        } else {
            break;
        }
        break;
    case 10602:
        ///标题前插入三个空行
        var title = prompt("（默认）输入标题的关键词（第一个字词），下面方括号中可用“册集部卷章回节”。",
            "第[0-9一二三四五六七八九十两百零〇]{1,5}[部]");
        if (title != "") {
            document.selection.Replace("^(" + title + ")(.*)$\\n",
                "\n\n\n\\1\\2\n", nFlags);
            document.selection.Replace("^ +$", "", nFlags);
        } else {
            break;
        }
        break;
    case 10608:
        //标题章节前后插入一个半角空格
        var title = prompt("（默认）输入标题表达式（.*关键词.*），可能正文中有相似文字会被加上空格。",
            "第[0-9一二三四五六七八九十两百千零〇]{1,7}[册集部卷章回节]");
        if (title != "") {
            document.selection.Replace("(" + title + ")", " \\1 ", nFlags);
            document.selection.Replace("[ ]+(" + title + ")[ ]+", " \\1 ",
                nFlags);
            document.selection.Replace("[ ]+$", "", nFlags);
            document.selection.Replace("^[ ]+", "", nFlags);
        }
        break;
    case 10605:
        //删除标题前空行
        var title = prompt("（默认）输入标题的正则表达式（.*关键词.*），下面方括号中可用“册集部卷章回节”。",
            "第[0-9一二三四五六七八九十两百零〇]{1,5}[部]");
        if (title != "") {
            document.selection.Replace("^[ ]*$", "", nFlags);
            document.selection.Replace("^\\n(" + title + ")", "\\1", nFlags);
            //统一标题空格格式
            document.selection.Replace("[ ]+", " ", nFlags);
        } else {
            break;
        }
        break;
    case 10606:
        //删除标题后空行（卷名 第123章 )
        var title = prompt("（默认）输入标题的正则表达式（.*关键词.*），下面方括号中可用“册集部卷章回节”。",
            "第[0-9一二三四五六七八九十两百零〇]{1,5}[章]");
        if (title != "") {
            document.selection.Replace("^[ ]*$", "", nFlags);
            document.selection.Replace("[ ]+", " ", nFlags);
            document.selection.Replace("(.*)(" + title + ")(.*)\\n\\n\\n\\n",
                "\\1\\2\\3\\n", nFlags);
            document.selection.Replace("(.*)(" + title + ")(.*)\\n\\n\\n",
                "\\1\\2\\3\\n", nFlags);
            document.selection.Replace("(.*)(" + title + ")(.*)\\n\\n",
                "\\1\\2\\3\\n", nFlags);
            document.selection.Replace("(.+)\\n\\n(.+)", "\\1\\n\\2", nFlags);
            //统一标题空格格式
        } else {
            break;
        }
        break;
    case 10603:
        //标题前插入自定义内容
        var title = prompt("（默认）输入标题表达式，或标题第一个词（.*关键词.*）。",
            "第[0-9一二三四五六七八九十两百千零〇]{1,7}[册集部卷章回节]");
        if (title != "") {
            var title1 = prompt("输入需要的自定义卷名（逐鹿中原卷）", "在此输入自定义的卷名");
            if (title1 != "") {
                document.selection.Replace("^(.*)(" + title + ")", "" + title1 +
                    " \\1\\2", nFlags);
                document.selection.Replace("[ 　]+$", "\\1\\2", nFlags);
            } else {
                break;
            }
        } else {
            break;
        }
        break;
    case 10502:
        //第一二三章 → 第123章
        alert("本功能只针对“第xx(集|册|部|卷|章|回|节)”这种格式的标题。");
        var num = 1;
        var found = 5;
        while (found) {
            num++;
            found = document.selection.Replace(
                "(\\n\\n.*第)百([^ ]{1,3})(集|册|部|卷|章|回|节)", "\\11\\2\\3",
                eeFindNext |
                eeFindReplaceEscSeq | eeReplaceAll | eeFindReplaceRegExp);
        }
        var num = 1;
        var found = 5;
        while (found) {
            num++;
            found = document.selection.Replace(
                "(\\n\\n.*第[1-9一二三四五六七八九两])百([^ ]{1,3})(集|册|部|卷|章|回|节)",
                "\\1\\2\\3",
                eeFindNext | eeFindReplaceEscSeq | eeReplaceAll |
                eeFindReplaceRegExp);
        }
        var num = 1;
        var found = 5;
        while (found) {
            num++;
            found = document.selection.Replace(
                "(\\n\\n.*第[1-9一二三四五六七八九两])百(集|册|部|卷|章|回|节)", "\\100\\2",
                eeFindNext |
                eeFindReplaceEscSeq | eeReplaceAll | eeFindReplaceRegExp);
        }
        var num = 1;
        var found = 5;
        while (found) {
            num++;
            found = document.selection.Replace(
                "(\\n\\n.*第[1-9一二三四五六七八九十两百]{1,3})十([^ ])(集|册|部|卷|章|回|节)",
                "\\1\\2\\3", eeFindNext | eeFindReplaceEscSeq |
                eeReplaceAll | eeFindReplaceRegExp);
        }
        var num = 1;
        var found = 5;
        while (found) {
            num++;
            found = document.selection.Replace(
                "(\\n\\n.*第)十([^ ])(集|册|部|卷|章|回|节)", "\\11\\2\\3",
                eeFindNext |
                eeFindReplaceEscSeq | eeReplaceAll | eeFindReplaceRegExp);
        }
        var num = 1;
        var found = 5;
        while (found) {
            num++;
            found = document.selection.Replace(
                "(\\n\\n.*第[1-9一二三四五六七八九十两百]{1,3})十(集|册|部|卷|章|回|节)",
                "\\10\\2",
                eeFindNext | eeFindReplaceEscSeq | eeReplaceAll |
                eeFindReplaceRegExp);
        }
        var num = 1;
        var found = 5;
        while (found) {
            num++;
            found = document.selection.Replace("(\\n\\n.*第)十(集|册|部|卷|章|回|节)",
                "\\110\\2", eeFindNext |
                eeFindReplaceEscSeq | eeReplaceAll | eeFindReplaceRegExp);
        }
        var num = 1;
        var found = 5;
        while (found) {
            num++;
            found = document.selection.Replace("(\\n\\n.*第)两百(集|册|部|卷|章|回|节)",
                "\\1200\\2", eeFindNext |
                eeFindReplaceEscSeq | eeReplaceAll | eeFindReplaceRegExp);
        }
        var num = 1;
        var found = 5;
        while (found) {
            num++;
            found = document.selection.Replace(
                "(\\n\\n.*第[1-9一二三四五六七八九十两百]{1,2})零([^ ]{0,2})(集|册|部|卷|章|回|节)",
                "\\10\\2\\3", eeFindNext | eeFindReplaceEscSeq |
                eeReplaceAll | eeFindReplaceRegExp);
        }
        var found1 = 5;
        while (found1) {
            num++;
            found1 = document.selection.Replace(
                "(\\n\\n.*第[1-9一二三四五六七八九十两百]{1,2})〇([^ ]{0,2})(集|册|部|卷|章|回|节)",
                "\\10\\2\\3", eeFindNext | eeFindReplaceEscSeq |
                eeReplaceAll | eeFindReplaceRegExp);
        }
        var found2 = 5;
        while (found2) {
            num++;
            found2 = document.selection.Replace(
                "(\\n\\n.*第[0-9一二三四五六七八九十两百零〇]{0,4})一([^ ]{0,4})(集|册|部|卷|章|回|节)",
                "\\11\\2\\3", eeFindNext | eeFindReplaceEscSeq |
                eeReplaceAll | eeFindReplaceRegExp);
        }
        var found3 = 5;
        while (found3) {
            num++;
            found3 = document.selection.Replace(
                "(\\n\\n.*第[0-9一二三四五六七八九十两百零〇]{0,4})二([^ ]{0,4})(集|册|部|卷|章|回|节)",
                "\\12\\2\\3", eeFindNext | eeFindReplaceEscSeq |
                eeReplaceAll | eeFindReplaceRegExp);
        }
        var found4 = 5;
        while (found4) {
            num++;
            found4 = document.selection.Replace(
                "(\\n\\n.*第[0-9一二三四五六七八九十两百零〇]{0,4})三([^ ]{0,4})(集|册|部|卷|章|回|节)",
                "\\13\\2\\3", eeFindNext | eeFindReplaceEscSeq |
                eeReplaceAll | eeFindReplaceRegExp);
        }
        var found5 = 5;
        while (found5) {
            num++;
            found5 = document.selection.Replace(
                "(\\n\\n.*第[0-9一二三四五六七八九十两百零〇]{0,4})四([^ ]{0,4})(集|册|部|卷|章|回|节)",
                "\\14\\2\\3", eeFindNext | eeFindReplaceEscSeq |
                eeReplaceAll | eeFindReplaceRegExp);
        }
        var found6 = 5;
        while (found6) {
            num++;
            found6 = document.selection.Replace(
                "(\\n\\n.*第[0-9一二三四五六七八九十两百零〇]{0,4})五([^ ]{0,4})(集|册|部|卷|章|回|节)",
                "\\15\\2\\3", eeFindNext | eeFindReplaceEscSeq |
                eeReplaceAll | eeFindReplaceRegExp);
        }
        var found7 = 5;
        while (found7) {
            num++;
            found7 = document.selection.Replace(
                "(\\n\\n.*第[0-9一二三四五六七八九十两百零〇]{0,4})六([^ ]{0,4})(集|册|部|卷|章|回|节)",
                "\\16\\2\\3", eeFindNext | eeFindReplaceEscSeq |
                eeReplaceAll | eeFindReplaceRegExp);
        }
        var found8 = 5;
        while (found8) {
            num++;
            found8 = document.selection.Replace(
                "(\\n\\n.*第[0-9一二三四五六七八九十两百零〇]{0,4})七([^ ]{0,4})(集|册|部|卷|章|回|节)",
                "\\17\\2\\3", eeFindNext | eeFindReplaceEscSeq |
                eeReplaceAll | eeFindReplaceRegExp);
        }
        var found9 = 5;
        while (found9) {
            num++;
            found9 = document.selection.Replace(
                "(\\n\\n.*第[0-9一二三四五六七八九十两百零〇]{0,4})八([^ ]{0,4})(集|册|部|卷|章|回|节)",
                "\\18\\2\\3", eeFindNext | eeFindReplaceEscSeq |
                eeReplaceAll | eeFindReplaceRegExp);
        }
        var found10 = 5;
        while (found10) {
            num++;
            found10 = document.selection.Replace(
                "(\\n\\n.*第[0-9一二三四五六七八九十两百零〇]{0,4})九([^ ]{0,4})(集|册|部|卷|章|回|节)",
                "\\19\\2\\3", eeFindNext | eeFindReplaceEscSeq |
                eeReplaceAll | eeFindReplaceRegExp);
        }
        //document.selection.Replace("[ ]+"," ",nFlags);
        break;
    case 10501:
        //第壹贰叁章 → 第一二三章
        alert("本功能只针对“第xx(集|册|部|卷|章|回|节)”这种格式的标题。");
        var num = 1;
        var found = 5;
        while (found) {
            num++;
            found = document.selection.Replace(
                "(第[^ ]{0,1})佰([^ ]{0,3})(集|册|部|卷|章|回|节)", "\\1百\\2\\3",
                eeFindNext |
                eeFindReplaceEscSeq | eeReplaceAll | eeFindReplaceRegExp);
        }
        //壹百
        var num = 1;
        var found = 5;
        while (found) {
            num++;
            found = document.selection.Replace(
                "(第[^ ]{0,3})拾([^ ]{0,1})(集|册|部|卷|章|回|节)", "\\1十\\2\\3",
                eeFindNext |
                eeFindReplaceEscSeq | eeReplaceAll | eeFindReplaceRegExp);
        }
        //十
        var num = 1;
        var found1 = 5;
        while (found1) {
            num++;
            found1 = document.selection.Replace("(第)俩(集|册|部|卷|章|回|节)",
                "\\1两\\2", eeFindNext | eeFindReplaceEscSeq |
                eeReplaceAll | eeFindReplaceRegExp);
        }
        var num = 1;
        var found1 = 5;
        while (found1) {
            num++;
            found1 = document.selection.Replace(
                "(第[^ ]{0,2})零([^ ]{0,3})(集|册|部|卷|章|回|节)", "\\1\\2\\3",
                eeFindNext |
                eeFindReplaceEscSeq | eeReplaceAll | eeFindReplaceRegExp);
        }
        var found2 = 5;
        while (found2) {
            num++;
            found2 = document.selection.Replace(
                "(第[^ ]{0,4})壹([^ ]{0,4})(集|册|部|卷|章|回|节)", "\\1一\\2\\3",
                eeFindNext |
                eeFindReplaceEscSeq | eeReplaceAll | eeFindReplaceRegExp);
        }
        var found3 = 5;
        while (found3) {
            num++;
            found3 = document.selection.Replace(
                "(第[^ ]{0,4})贰([^ ]{0,4})(集|册|部|卷|章|回|节)", "\\1二\\2\\3",
                eeFindNext |
                eeFindReplaceEscSeq | eeReplaceAll | eeFindReplaceRegExp);
        }
        var found4 = 5;
        while (found4) {
            num++;
            found4 = document.selection.Replace(
                "(第[^ ]{0,4})叁([^ ]{0,4})(集|册|部|卷|章|回|节)", "\\1三\\2\\3",
                eeFindNext |
                eeFindReplaceEscSeq | eeReplaceAll | eeFindReplaceRegExp);
        }
        var found5 = 5;
        while (found5) {
            num++;
            found5 = document.selection.Replace(
                "(第[^ ]{0,4})肆([^ ]{0,4})(集|册|部|卷|章|回|节)", "\\1四\\2\\3",
                eeFindNext |
                eeFindReplaceEscSeq | eeReplaceAll | eeFindReplaceRegExp);
        }
        var found6 = 5;
        while (found6) {
            num++;
            found6 = document.selection.Replace(
                "(第[^ ]{0,4})伍([^ ]{0,4})(集|册|部|卷|章|回|节)", "\\1五\\2\\3",
                eeFindNext |
                eeFindReplaceEscSeq | eeReplaceAll | eeFindReplaceRegExp);
        }
        var found7 = 5;
        while (found7) {
            num++;
            found7 = document.selection.Replace(
                "(第[^ ]{0,4})陆([^ ]{0,4})(集|册|部|卷|章|回|节)", "\\1六\\2\\3",
                eeFindNext |
                eeFindReplaceEscSeq | eeReplaceAll | eeFindReplaceRegExp);
        }
        var found8 = 5;
        while (found8) {
            num++;
            found8 = document.selection.Replace(
                "(第[^ ]{0,4})柒([^ ]{0,4})(集|册|部|卷|章|回|节)", "\\1七\\2\\3",
                eeFindNext |
                eeFindReplaceEscSeq | eeReplaceAll | eeFindReplaceRegExp);
        }
        var found9 = 5;
        while (found9) {
            num++;
            found9 = document.selection.Replace(
                "(第[^ ]{0,4})捌([^ ]{0,4})(集|册|部|卷|章|回|节)", "\\1八\\2\\3",
                eeFindNext |
                eeFindReplaceEscSeq | eeReplaceAll | eeFindReplaceRegExp);
        }
        var found10 = 5;
        while (found10) {
            num++;
            found10 = document.selection.Replace(
                "(第[^ ]{0,4})玖([^ ]{0,4})(集|册|部|卷|章|回|节)", "\\1九\\2\\3",
                eeFindNext | eeFindReplaceEscSeq | eeReplaceAll |
                eeFindReplaceRegExp);
        }
        document.selection.Replace("[ ]+", " ", nFlags);
        break;
    case 1008:
        //全角１２３→半角123
        var found = 5;
        while (found) {
            num++;
            found = document.selection.Replace("１", "1", eeFindNext |
                eeReplaceAll);
        }
        var found = 5;
        while (found) {
            num++;
            found = document.selection.Replace("２", "2", eeFindNext |
                eeReplaceAll);
        }
        var found = 5;
        while (found) {
            num++;
            found = document.selection.Replace("３", "3", eeFindNext |
                eeReplaceAll);
        }
        var found = 5;
        while (found) {
            num++;
            found = document.selection.Replace("４", "4", eeFindNext |
                eeReplaceAll);
        }
        var found = 5;
        while (found) {
            num++;
            found = document.selection.Replace("５", "5", eeFindNext |
                eeReplaceAll);
        }
        var found = 5;
        while (found) {
            num++;
            found = document.selection.Replace("６", "6", eeFindNext |
                eeReplaceAll);
        }
        var found = 5;
        while (found) {
            num++;
            found = document.selection.Replace("７", "7", eeFindNext |
                eeReplaceAll);
        }
        var found = 5;
        while (found) {
            num++;
            found = document.selection.Replace("８", "8", eeFindNext |
                eeReplaceAll);
        }
        var found = 5;
        while (found) {
            num++;
            found = document.selection.Replace("９", "9", eeFindNext |
                eeReplaceAll);
        }
        var found = 5;
        while (found) {
            num++;
            found = document.selection.Replace("０", "0", eeFindNext |
                eeReplaceAll);
        }
        break;
    case 1009:
        //一二三 → 123
        var num = 1;
        var found = 5;
        while (found) {
            num++;
            found = document.selection.Replace(
                "([^一二三四五六七八九两]{0,5})百([一二三四五六七八九十零〇]{1,5})", "\\11\\2",
                eeFindNext |
                eeFindReplaceEscSeq | eeReplaceAll | eeFindReplaceRegExp);
        }
        //百一十
        var num = 1;
        var found = 5;
        while (found) {
            num++;
            found = document.selection.Replace(
                "([一二三四五六七八九千两]{1,5})百([一二三四五六七八九十零〇]{1,5})", "\\1\\2",
                eeFindNext |
                eeFindReplaceEscSeq | eeReplaceAll | eeFindReplaceRegExp);
        }
        //一百一十
        var num = 1;
        var found = 5;
        while (found) {
            num++;
            found = document.selection.Replace(
                "([一二三四五六七八九两]{1,5})百([^一二三四五六七八九十零〇]{0,5})", "\\100\\2",
                eeFindNext |
                eeFindReplaceEscSeq | eeReplaceAll | eeFindReplaceRegExp);
        }
        //一百
        var num = 1;
        var found = 5;
        while (found) {
            num++;
            found = document.selection.Replace(
                "([一二三四五六七八九]{1,5})十([一二三四五六七八九〇]{1,5})", "\\1\\2",
                eeFindNext |
                eeFindReplaceEscSeq | eeReplaceAll | eeFindReplaceRegExp);
        }
        //三十三
        var num = 1;
        var found = 5;
        while (found) {
            num++;
            found = document.selection.Replace(
                "([^一二三四五六七八九]{0,5})十([一二三四五六七八九〇]{1,5})", "\\11\\2",
                eeFindNext |
                eeFindReplaceEscSeq | eeReplaceAll | eeFindReplaceRegExp);
        }
        //十三
        var num = 1;
        var found = 5;
        while (found) {
            num++;
            found = document.selection.Replace(
                "([一二三四五六七八九]{1,5})十([^一二三四五六七八九〇]{0,5})", "\\10\\2",
                eeFindNext |
                eeFindReplaceEscSeq | eeReplaceAll | eeFindReplaceRegExp);
        }
        //三十
        var num = 1;
        var found = 5;
        while (found) {
            num++;
            found = document.selection.Replace(
                "([^一二三四五六七八九]{0,5})十([^一二三四五六七八九〇]{0,5})", "\\110\\2",
                eeFindNext |
                eeFindReplaceEscSeq | eeReplaceAll | eeFindReplaceRegExp);
        }
        //十
        var num = 1;
        var found = 5;
        while (found) {
            num++;
            found = document.selection.Replace("([^ ]{0,5})两([^ ]{0,5})",
                "\\12\\2", eeFindNext | eeFindReplaceEscSeq |
                eeReplaceAll | eeFindReplaceRegExp);
        }
        //两
        var num = 1;
        var found = 5;
        while (found) {
            num++;
            found = document.selection.Replace("([^ ]{0,5})零([^ ]{0,5})",
                "\\10\\2", eeFindNext | eeFindReplaceEscSeq |
                eeReplaceAll | eeFindReplaceRegExp);
        }
        var num = 1;
        var found1 = 5;
        while (found1) {
            num++;
            found1 = document.selection.Replace("([^ ]{0,5})〇([^ ]{0,5})",
                "\\10\\2", eeFindNext | eeFindReplaceEscSeq |
                eeReplaceAll | eeFindReplaceRegExp);
        }
        var found2 = 5;
        while (found2) {
            num++;
            found2 = document.selection.Replace("([^ ]{0,5})一([^ ]{0,5})",
                "\\11\\2", eeFindNext | eeFindReplaceEscSeq |
                eeReplaceAll | eeFindReplaceRegExp);
        }
        var found3 = 5;
        while (found3) {
            num++;
            found3 = document.selection.Replace("([^ ]{0,5})二([^ ]{0,5})",
                "\\12\\2", eeFindNext | eeFindReplaceEscSeq |
                eeReplaceAll | eeFindReplaceRegExp);
        }
        var found4 = 5;
        while (found4) {
            num++;
            found4 = document.selection.Replace("([^ ]{0,5})三([^ ]{0,5})",
                "\\13\\2", eeFindNext | eeFindReplaceEscSeq |
                eeReplaceAll | eeFindReplaceRegExp);
        }
        var found5 = 5;
        while (found5) {
            num++;
            found5 = document.selection.Replace("([^ ]{0,5})四([^ ]{0,5})",
                "\\14\\2", eeFindNext | eeFindReplaceEscSeq |
                eeReplaceAll | eeFindReplaceRegExp);
        }
        var found6 = 5;
        while (found6) {
            num++;
            found6 = document.selection.Replace("([^ ]{0,5})五([^ ]{0,5})",
                "\\15\\2", eeFindNext | eeFindReplaceEscSeq |
                eeReplaceAll | eeFindReplaceRegExp);
        }
        var found7 = 5;
        while (found7) {
            num++;
            found7 = document.selection.Replace("([^ ]{0,5})六([^ ]{0,5})",
                "\\16\\2", eeFindNext | eeFindReplaceEscSeq |
                eeReplaceAll | eeFindReplaceRegExp);
        }
        var found8 = 5;
        while (found8) {
            num++;
            found8 = document.selection.Replace("([^ ]{0,5})七([^ ]{0,5})",
                "\\17\\2", eeFindNext | eeFindReplaceEscSeq |
                eeReplaceAll | eeFindReplaceRegExp);
        }
        var found9 = 5;
        while (found9) {
            num++;
            found9 = document.selection.Replace("([^ ]{0,5})八([^ ]{0,5})",
                "\\18\\2", eeFindNext | eeFindReplaceEscSeq |
                eeReplaceAll | eeFindReplaceRegExp);
        }
        var found10 = 5;
        while (found10) {
            num++;
            found10 = document.selection.Replace("([^ ]{0,5})九([^ ]{0,5})",
                "\\19\\2", eeFindNext | eeFindReplaceEscSeq |
                eeReplaceAll | eeFindReplaceRegExp);
        }
        document.selection.Replace("[ ]+", " ", nFlags);
        break;
    case 10504:
        //第123章 → 第一百二十三章
        alert("本功能只针对“第xx(集|册|部|卷|章|回|节)”这种格式的标题。");
        document.selection.Replace("(第)(1|１)(.)(集|册|部|卷|章|回|节)", "\\1十\\3\\4",
            eeFindNext | eeFindReplaceEscSeq |
            eeReplaceAll | eeFindReplaceRegExp);
        document.selection.Replace("(第)(.{0,2})(1|１)(集|册|部|卷|章|回|节)",
            "\\1\\2一\\4", eeFindNext | eeFindReplaceEscSeq |
            eeReplaceAll | eeFindReplaceRegExp);
        document.selection.Replace("(第)(.{0,2})(2|２)(集|册|部|卷|章|回|节)",
            "\\1\\2二\\4", eeFindNext | eeFindReplaceEscSeq |
            eeReplaceAll | eeFindReplaceRegExp);
        document.selection.Replace("(第)(.{0,2})(3|３)(集|册|部|卷|章|回|节)",
            "\\1\\2三\\4", eeFindNext | eeFindReplaceEscSeq |
            eeReplaceAll | eeFindReplaceRegExp);
        document.selection.Replace("(第)(.{0,2})(4|４)(集|册|部|卷|章|回|节)",
            "\\1\\2四\\4", eeFindNext | eeFindReplaceEscSeq |
            eeReplaceAll | eeFindReplaceRegExp);
        document.selection.Replace("(第)(.{0,2})(5|５)(集|册|部|卷|章|回|节)",
            "\\1\\2五\\4", eeFindNext | eeFindReplaceEscSeq |
            eeReplaceAll | eeFindReplaceRegExp);
        document.selection.Replace("(第)(.{0,2})(6|６)(集|册|部|卷|章|回|节)",
            "\\1\\2六\\4", eeFindNext | eeFindReplaceEscSeq |
            eeReplaceAll | eeFindReplaceRegExp);
        document.selection.Replace("(第)(.{0,2})(7|７)(集|册|部|卷|章|回|节)",
            "\\1\\2七\\4", eeFindNext | eeFindReplaceEscSeq |
            eeReplaceAll | eeFindReplaceRegExp);
        document.selection.Replace("(第)(.{0,2})(8|８)(集|册|部|卷|章|回|节)",
            "\\1\\2八\\4", eeFindNext | eeFindReplaceEscSeq |
            eeReplaceAll | eeFindReplaceRegExp);
        document.selection.Replace("(第)(.{0,2})(9|９)(集|册|部|卷|章|回|节)",
            "\\1\\2九\\4", eeFindNext | eeFindReplaceEscSeq |
            eeReplaceAll | eeFindReplaceRegExp);
        document.selection.Replace("(第)(.{0,1})(1|１)(.{1})(集|册|部|卷|章|回|节)",
            "\\1\\2一十\\4\\5", eeFindNext |
            eeFindReplaceEscSeq | eeReplaceAll | eeFindReplaceRegExp);
        document.selection.Replace("(第)(.{0,1})(2|２)(.{1})(集|册|部|卷|章|回|节)",
            "\\1\\2二十\\4\\5", eeFindNext |
            eeFindReplaceEscSeq | eeReplaceAll | eeFindReplaceRegExp);
        document.selection.Replace("(第)(.{0,1})(3|３)(.{1})(集|册|部|卷|章|回|节)",
            "\\1\\2三十\\4\\5", eeFindNext |
            eeFindReplaceEscSeq | eeReplaceAll | eeFindReplaceRegExp);
        document.selection.Replace("(第)(.{0,1})(4|４)(.{1})(集|册|部|卷|章|回|节)",
            "\\1\\2四十\\4\\5", eeFindNext |
            eeFindReplaceEscSeq | eeReplaceAll | eeFindReplaceRegExp);
        document.selection.Replace("(第)(.{0,1})(5|５)(.{1})(集|册|部|卷|章|回|节)",
            "\\1\\2五十\\4\\5", eeFindNext |
            eeFindReplaceEscSeq | eeReplaceAll | eeFindReplaceRegExp);
        document.selection.Replace("(第)(.{0,1})(6|６)(.{1})(集|册|部|卷|章|回|节)",
            "\\1\\2六十\\4\\5", eeFindNext |
            eeFindReplaceEscSeq | eeReplaceAll | eeFindReplaceRegExp);
        document.selection.Replace("(第)(.{0,1})(7|７)(.{1})(集|册|部|卷|章|回|节)",
            "\\1\\2七十\\4\\5", eeFindNext |
            eeFindReplaceEscSeq | eeReplaceAll | eeFindReplaceRegExp);
        document.selection.Replace("(第)(.{0,1})(8|８)(.{1})(集|册|部|卷|章|回|节)",
            "\\1\\2八十\\4\\5", eeFindNext |
            eeFindReplaceEscSeq | eeReplaceAll | eeFindReplaceRegExp);
        document.selection.Replace("(第)(.{0,1})(9|９)(.{1})(集|册|部|卷|章|回|节)",
            "\\1\\2九十\\4\\5", eeFindNext |
            eeFindReplaceEscSeq | eeReplaceAll | eeFindReplaceRegExp);
        document.selection.Replace("(第)(1|１)(.{2,3})(集|册|部|卷|章|回|节)",
            "\\1一百\\3\\4", eeFindNext | eeFindReplaceEscSeq |
            eeReplaceAll | eeFindReplaceRegExp);
        document.selection.Replace("(第)(2|２)(.{2,3})(集|册|部|卷|章|回|节)",
            "\\1二百\\3\\4", eeFindNext | eeFindReplaceEscSeq |
            eeReplaceAll | eeFindReplaceRegExp);
        document.selection.Replace("(第)(3|３)(.{2,3})(集|册|部|卷|章|回|节)",
            "\\1三百\\3\\4", eeFindNext | eeFindReplaceEscSeq |
            eeReplaceAll | eeFindReplaceRegExp);
        document.selection.Replace("(第)(4|４)(.{2,3})(集|册|部|卷|章|回|节)",
            "\\1四百\\3\\4", eeFindNext | eeFindReplaceEscSeq |
            eeReplaceAll | eeFindReplaceRegExp);
        document.selection.Replace("(第)(5|５)(.{2,3})(集|册|部|卷|章|回|节)",
            "\\1五百\\3\\4", eeFindNext | eeFindReplaceEscSeq |
            eeReplaceAll | eeFindReplaceRegExp);
        document.selection.Replace("(第)(6|６)(.{2,3})(集|册|部|卷|章|回|节)",
            "\\1六百\\3\\4", eeFindNext | eeFindReplaceEscSeq |
            eeReplaceAll | eeFindReplaceRegExp);
        document.selection.Replace("(第)(7|７)(.{2,3})(集|册|部|卷|章|回|节)",
            "\\1七百\\3\\4", eeFindNext | eeFindReplaceEscSeq |
            eeReplaceAll | eeFindReplaceRegExp);
        document.selection.Replace("(第)(8|８)(.{2,3})(集|册|部|卷|章|回|节)",
            "\\1八百\\3\\4", eeFindNext | eeFindReplaceEscSeq |
            eeReplaceAll | eeFindReplaceRegExp);
        document.selection.Replace("(第)(9|９)(.{2,3})(集|册|部|卷|章|回|节)",
            "\\1九百\\3\\4", eeFindNext | eeFindReplaceEscSeq |
            eeReplaceAll | eeFindReplaceRegExp);
        document.selection.Replace("(第.)(00|００|OO)(集|册|部|卷|章|回|节)", "\\1\\3",
            eeFindNext | eeFindReplaceEscSeq |
            eeReplaceAll | eeFindReplaceRegExp);
        document.selection.Replace("(第..)(0|０|O)(集|册|部|卷|章|回|节)", "\\1\\3",
            eeFindNext | eeFindReplaceEscSeq |
            eeReplaceAll | eeFindReplaceRegExp);
        document.selection.Replace("(第.)(0|０|O)(.)(集|册|部|卷|章|回|节)",
            "\\1零\\3\\4", eeFindNext | eeFindReplaceEscSeq |
            eeReplaceAll | eeFindReplaceRegExp);
        document.selection.Replace("十O", "十", nFlags);
        //document.selection.Replace("0","〇",nFlags);
        break;
    case 10503:
        //第一二三章 → 第一百二十三章
        alert("本功能只针对“第xx(集|册|部|卷|章|回|节)”这种格式的标题。");
        document.selection.Replace("(第)(一)(.)(集|册|部|卷|章|回|节)", "\\1十\\3\\4",
            eeFindNext | eeFindReplaceEscSeq |
            eeReplaceAll | eeFindReplaceRegExp);
        document.selection.Replace(
            "(第)([一二三四五六七八九十百零〇]{0,1})(一)(.{1})(集|册|部|卷|章|回|节)",
            "\\1\\2一十\\4\\5",
            eeFindNext | eeFindReplaceEscSeq | eeReplaceAll |
            eeFindReplaceRegExp);
        document.selection.Replace(
            "(第)([一二三四五六七八九十百零〇]{0,1})(二)(.{1})(集|册|部|卷|章|回|节)",
            "\\1\\2二十\\4\\5",
            eeFindNext | eeFindReplaceEscSeq | eeReplaceAll |
            eeFindReplaceRegExp);
        document.selection.Replace(
            "(第)([一二三四五六七八九十百零〇]{0,1})(三)(.{1})(集|册|部|卷|章|回|节)",
            "\\1\\2三十\\4\\5",
            eeFindNext | eeFindReplaceEscSeq | eeReplaceAll |
            eeFindReplaceRegExp);
        document.selection.Replace(
            "(第)([一二三四五六七八九十百零〇]{0,1})(四)(.{1})(集|册|部|卷|章|回|节)",
            "\\1\\2四十\\4\\5",
            eeFindNext | eeFindReplaceEscSeq | eeReplaceAll |
            eeFindReplaceRegExp);
        document.selection.Replace(
            "(第)([一二三四五六七八九十百零〇]{0,1})(五)(.{1})(集|册|部|卷|章|回|节)",
            "\\1\\2五十\\4\\5",
            eeFindNext | eeFindReplaceEscSeq | eeReplaceAll |
            eeFindReplaceRegExp);
        document.selection.Replace(
            "(第)([一二三四五六七八九十百零〇]{0,1})(六)(.{1})(集|册|部|卷|章|回|节)",
            "\\1\\2六十\\4\\5",
            eeFindNext | eeFindReplaceEscSeq | eeReplaceAll |
            eeFindReplaceRegExp);
        document.selection.Replace(
            "(第)([一二三四五六七八九十百零〇]{0,1})(七)(.{1})(集|册|部|卷|章|回|节)",
            "\\1\\2七十\\4\\5",
            eeFindNext | eeFindReplaceEscSeq | eeReplaceAll |
            eeFindReplaceRegExp);
        document.selection.Replace(
            "(第)([一二三四五六七八九十百零〇]{0,1})(八)(.{1})(集|册|部|卷|章|回|节)",
            "\\1\\2八十\\4\\5",
            eeFindNext | eeFindReplaceEscSeq | eeReplaceAll |
            eeFindReplaceRegExp);
        document.selection.Replace(
            "(第)([一二三四五六七八九十百零〇]{0,1})(九)(.{1})(集|册|部|卷|章|回|节)",
            "\\1\\2九十\\4\\5",
            eeFindNext | eeFindReplaceEscSeq | eeReplaceAll |
            eeFindReplaceRegExp);
        document.selection.Replace("(第)(一)(.{2,3})(集|册|部|卷|章|回|节)",
            "\\1一百\\3\\4", eeFindNext | eeFindReplaceEscSeq |
            eeReplaceAll | eeFindReplaceRegExp);
        document.selection.Replace("(第)(二)(.{2,3})(集|册|部|卷|章|回|节)",
            "\\1二百\\3\\4", eeFindNext | eeFindReplaceEscSeq |
            eeReplaceAll | eeFindReplaceRegExp);
        document.selection.Replace("(第)(三)(.{2,3})(集|册|部|卷|章|回|节)",
            "\\1三百\\3\\4", eeFindNext | eeFindReplaceEscSeq |
            eeReplaceAll | eeFindReplaceRegExp);
        document.selection.Replace("(第)(四)(.{2,3})(集|册|部|卷|章|回|节)",
            "\\1四百\\3\\4", eeFindNext | eeFindReplaceEscSeq |
            eeReplaceAll | eeFindReplaceRegExp);
        document.selection.Replace("(第)(五)(.{2,3})(集|册|部|卷|章|回|节)",
            "\\1五百\\3\\4", eeFindNext | eeFindReplaceEscSeq |
            eeReplaceAll | eeFindReplaceRegExp);
        document.selection.Replace("(第)(六)(.{2,3})(集|册|部|卷|章|回|节)",
            "\\1六百\\3\\4", eeFindNext | eeFindReplaceEscSeq |
            eeReplaceAll | eeFindReplaceRegExp);
        document.selection.Replace("(第)(七)(.{2,3})(集|册|部|卷|章|回|节)",
            "\\1七百\\3\\4", eeFindNext | eeFindReplaceEscSeq |
            eeReplaceAll | eeFindReplaceRegExp);
        document.selection.Replace("(第)(八)(.{2,3})(集|册|部|卷|章|回|节)",
            "\\1八百\\3\\4", eeFindNext | eeFindReplaceEscSeq |
            eeReplaceAll | eeFindReplaceRegExp);
        document.selection.Replace("(第)(九)(.{2,3})(集|册|部|卷|章|回|节)",
            "\\1九百\\3\\4", eeFindNext | eeFindReplaceEscSeq |
            eeReplaceAll | eeFindReplaceRegExp);
        document.selection.Replace("(第.+)(〇〇)(集|册|部|卷|章|回|节)", "\\1\\3",
            eeFindNext | eeFindReplaceEscSeq |
            eeReplaceAll | eeFindReplaceRegExp);
        document.selection.Replace("(第.+)(〇)(集|册|部|卷|章|回|节)", "\\1\\3",
            eeFindNext | eeFindReplaceEscSeq | eeReplaceAll |
            eeFindReplaceRegExp);
        document.selection.Replace("(第.+)(〇)(.+)(集|册|部|卷|章|回|节)", "\\1零\\3\\4",
            eeFindNext | eeFindReplaceEscSeq |
            eeReplaceAll | eeFindReplaceRegExp);
        break;
    case 10400:
        //VIP章节标题预处理使用
        alert(
            "使用指南：必须对不规范vip章节名进行预处理，再进行自动排版。最好对规范和不规范的混合标题分开进行处理。\nVIP章节标题直接复制起点目录中的文字，一行四个标题的格式。\n类似于：\n“第九章第十章十一章十二章”\n“九 十 十一 十二”\n预处理得到结果：\n“第九章 第十章 第十一章 第十二章”\n\n复杂标题预先分段:\n类似于“第九章 第十章 第十一章 第十二章”的标题，由一行四个标题处理为一行一个。\n\n“字段”是指类似于“卷六 织网 粮争帛斗 一一 ”的标题中被空格隔开的一段，即第二字段（织网）第三字段（粮争帛斗）。\n\n处理流程：\n1.先要对标题进行分段，把一行四个的标题，分成一行一个。\n2.给过于紧密的标题加上空格区分不同字段内容。\n3.给残缺量词的标题加上“第章”。\n4.把残缺的括号补齐。\n\n因为很多书的图片都是无法确定多少的，比如说有的章节只有1张，有的2张，有的3张，这是没办法找到规律进行处理的。不如就按照这些章节图片最多数量分，然后手工把多余的链接一个一个删，这总比一个一个加进去要简单。不要的部分就是<center>......</center>之间的。"
        );
        break;

    case 10401:
        //VIP章节不规范标题预处理（加章节量词）
        document.selection.Replace("《", " 《", nFlags);
        document.selection.Replace("》", "》 ", nFlags);
        document.selection.Replace("(第[0-9一二三四五六七八九十两百千零〇]{1,7}[册集部卷章回节])",
            " \\0 ", nFlags);
        document.selection.Replace("　", " ", nFlags);
        //改成半角空格
        document.selection.Replace("(", " （", eeFindNext | eeReplaceAll);
        document.selection.Replace(")", "） ", eeFindNext | eeReplaceAll);
        //改成全角括号
        document.selection.Replace(" +", " ", nFlags);
        document.selection.Replace(" *$", "", nFlags);
        document.selection.Replace("^\\n", "", nFlags);
        var title1 = prompt("输入标题的第一个字词或空格分段（逐鹿卷 第2章），已分段则取消。",
            "“逐鹿卷”或“第[0-9一二三四五六七八九十两百零〇]{1,5}卷”，（卷部集章节回），只有一个字段可用空格");
        if (title1 != "") {
            document.selection.Replace("\\n", "", nFlags);
            document.selection.Replace("(" + title1 + ")", "\\n\\0", nFlags);
            document.selection.Replace("^[ ]*\\n", "", nFlags);
        }
        bAnswer = confirm(
            "标题中各字段已经预先分配好空格按“确定”；未分配好空格则按“取消”，对标题中的数字自动加“第章”量词，但有可能出现错误把非序数的标题名加“第章”，需要检查。"
        );
        if (bAnswer == true) {
            var title = prompt("（默认）输入一个量词“章回节”,若已有量词而无“第”按取消。", "章") //
            if (title != "") {
                var insert = prompt("要给以空格分开的标题的第几个词加“第”量词（卷六 织网 一一）。",
                    "在此输入1-5之间的数字");
                if (insert == 1) {
                    document.selection.Replace("^([^ ]*)", "第\\1" + title + "",
                        nFlags);
                    //加“第章”，加空格
                }
                if (insert == 2) {
                    document.selection.Replace("^([^ ]*) ([^ ]*)", "\\1 第\\2" +
                        title + "", nFlags);
                }
                if (insert == 3) {
                    document.selection.Replace("^([^ ]*) ([^ ]*) ([^ ]*)",
                        "\\1 \\2 第\\3" + title + "", nFlags);
                }
                if (insert == 4) {
                    document.selection.Replace(
                        "^([^ ]*) ([^ ]*) ([^ ]*) ([^ ]*)",
                        "\\1 \\2 \\3 第\\4" + title + "",
                        nFlags);
                }
                if (insert == 5) {
                    document.selection.Replace(
                        "^([^ ]*) ([^ ]*) ([^ ]*) ([^ ]*) ([^ ]*)",
                        "\\1 \\2 \\3 \\4 第\\5" +
                        title + "",
                        nFlags);
                }
            } else {
                document.selection.Replace("(^.+) ([^ ]+[章回节])", "\\1 第\\2",
                    nFlags);
                //加“第”，前面需要有空格
            }
        } else {
            document.selection.Replace("[0-9一二三四五六七八九十百两]+", " 第\\0章 ", nFlags);
        }
        document.selection.Replace("第第", "第", nFlags);
        //去“第”
        document.selection.Replace("章章", "章", nFlags);
        //去“章”
        document.selection.Replace("节节", "节", nFlags);
        document.selection.Replace("节章", "节", nFlags);
        document.selection.Replace("章节", "章", nFlags);
        document.selection.Replace("章回", "章", nFlags);
        document.selection.Replace("回章", "章", nFlags);
        document.selection.Replace("卷章", "卷", nFlags);
        document.selection.Replace("部章", "部", nFlags);
        document.selection.Replace("第卷", "卷", nFlags);
        document.selection.Replace("第章", "第", nFlags);
        document.selection.Replace("第 第", "第", nFlags);
        document.selection.Replace("章 ([卷部集章节回])", "\\1", nFlags);
        document.selection.Replace("[ ]+", " ", nFlags);
        document.selection.Replace("(^[ 　]*)|([ 　]*$)", "", nFlags);
        break;
    case 10402:
        //VIP章节不规范标题预处理（标题内加空格）	
        document.selection.Replace("《", " 《", nFlags);
        document.selection.Replace("》", "》 ", nFlags);
        document.selection.Replace("(第[0-9一二三四五六七八九十两百千零〇]{1,7}[册集部卷章回节])",
            " \\0 ", nFlags);
        document.selection.Replace("　", " ", nFlags);
        //改成半角空格
        document.selection.Replace("(", " （", eeFindNext | eeReplaceAll);
        document.selection.Replace(")", "） ", eeFindNext | eeReplaceAll);
        //改成全角括号
        document.selection.Replace(" +", " ", nFlags);
        document.selection.Replace(" *$", "", nFlags);
        document.selection.Replace("^\\n", "", nFlags);
        var title1 = prompt("输入标题的第一个字词或空格分段（逐鹿卷 第2章），已分段则取消。",
            "“逐鹿卷”或“第[0-9一二三四五六七八九十两百零〇]{1,5}卷”，（卷部集章节回），只有一个字段可用空格");
        if (title1 != "") {
            document.selection.Replace("\\n", "", nFlags);
            document.selection.Replace("(" + title1 + ")", "\\n\\0", nFlags);
            document.selection.Replace("^[ ]*\\n", "", nFlags);
        }
        var title = prompt("1.（默认）输入要加空格的关键词或者标题表达式，无则取消。",
                "第[0-9一二三四五六七八九十两百千零〇]{1,7}[册集部卷章回节]") //
        if (title != "") {
            document.selection.Replace("(" + title + ")", " \\1 ", nFlags);
            //标题前后加空格
        }
        var title1 = prompt("2.输入还要加空格的第二组关键词（卷六织网第三章“粮争”(十一)）。",
                "在此输入关键词，织网或粮争，或括号内容(.+)") //
        if (title1 != "") {
            document.selection.Replace("(" + title1 + ")", " \\1 ", nFlags);
            //标题前后加空格
        }
        document.selection.Replace("[ ]+", " ", nFlags);
        document.selection.Replace("(^[ 　]*)|([ 　]*$)", "", nFlags);
        break;
    case 10403:
        //VIP章节不规范标题预处理（括号配对）	
        document.selection.Replace("《", " 《", nFlags);
        document.selection.Replace("》", "》 ", nFlags);
        document.selection.Replace("(第[0-9一二三四五六七八九十两百千零〇]{1,7}[册集部卷章回节])",
            " \\0 ", nFlags);
        document.selection.Replace("　", " ", nFlags);
        //改成半角空格
        document.selection.Replace("(", " （", eeFindNext | eeReplaceAll);
        document.selection.Replace(")", "） ", eeFindNext | eeReplaceAll);
        //改成全角括号
        document.selection.Replace("[ ]+", " ", nFlags);
        document.selection.Replace("[ ]*$", "", nFlags);
        document.selection.Replace("^\\n", "", nFlags);
        var title1 = prompt("输入标题的第一个字词或空格分段（逐鹿卷 第2章），已分段则取消。",
            "“逐鹿卷”或“第[0-9一二三四五六七八九十两百零〇]{1,5}卷”，（卷部集章节回），只有一个字段可用空格");
        if (title1 != "") {
            document.selection.Replace("\\n", "", nFlags);
            document.selection.Replace("(" + title1 + ")", "\\n\\0", nFlags);
            document.selection.Replace("^[ ]*\\n", "", nFlags);
        }
        document.selection.Replace("(^.*) ([^ ]+)）", "\\1 （\\2） ", nFlags);
        //修补前括号
        document.selection.Replace("(^.*)（([^ ]+)", "\\1 （\\2） ", nFlags);
        //修补后括号
        document.selection.Replace("（（", "（", nFlags);
        document.selection.Replace("））", "）", nFlags);
        //
        document.selection.Replace("（）", "", nFlags);
        //
        document.selection.Replace("([ ]+)", " ", nFlags);
        //清除多余空格
        document.selection.Replace("(^[ 　]*)|([ 　]*$)", "", nFlags);
        //删除段首尾空格
        document.selection.Replace("（ ", " （", nFlags);
        document.selection.Replace(" ）", "） ", nFlags);
        document.selection.Replace("(^[ 　]*)|([ 　]*$)", "", nFlags);
        break;
    case 10404:
        //VIP章节不规范标题预处理（指定位置添加括号）	
        document.selection.Replace("《", " 《", nFlags);
        document.selection.Replace("》", "》 ", nFlags);
        document.selection.Replace("　", " ", nFlags);
        //改成半角空格
        document.selection.Replace("(", " （", eeFindNext | eeReplaceAll);
        document.selection.Replace(")", "） ", eeFindNext | eeReplaceAll);
        //改成全角括号
        document.selection.Replace("(第[0-9一二三四五六七八九十两百千零〇]{1,7}[册集部卷章回节])",
            " \\0 ", nFlags);
        document.selection.Replace(" +", " ", nFlags);
        document.selection.Replace(" *$", "", nFlags);
        document.selection.Replace("^\\n", "", nFlags);
        var title1 = prompt("输入标题的第一个字词或空格分段（逐鹿卷 第2章），已分段则取消。",
            "“逐鹿卷”或“第[0-9一二三四五六七八九十两百零〇]{1,5}卷”，（卷部集章节回），只有一个字段可用空格");
        if (title1 != "") {
            document.selection.Replace("\\n", "", nFlags);
            document.selection.Replace("(" + title1 + ")", "\\n\\0", nFlags);
            document.selection.Replace("^[ ]*\\n", "", nFlags);
        }
        var title1 = prompt("要加括号的位置为标题中倒数第几组词（卷六 第三章 十一）。”", "在此输入1-5之间的数字") //
        if (title1 == "1") {
            document.selection.Replace("(^.+) ([^ ]+)", "\\1 （\\2）", nFlags);
        }
        if (title1 == "2") {
            document.selection.Replace("(^.+) ([^ ]+) ([^ ]+)", "\\1 （\\2） \\3",
                nFlags);
        }
        if (title1 == "3") {
            document.selection.Replace("(^.+) ([^ ]+) ([^ ]+) ([^ ]+)",
                "\\1 （\\2） \\3 \\4", nFlags);
        }
        if (title1 == "4") {
            document.selection.Replace("(^.+) ([^ ]+) ([^ ]+) ([^ ]+) ([^ ]+)",
                "\\1 （\\2） \\3 \\4 \\5", nFlags);
        }
        if (title1 == "5") {
            document.selection.Replace(
                "(^.+) ([^ ]+) ([^ ]+) ([^ ]+) ([^ ]+) ([^ ]+)",
                "\\1 （\\2） \\3 \\4 \\5",
                nFlags);
        }
        document.selection.Replace("([ ]+)", " ", nFlags);
        //清除多余空格
        document.selection.Replace("(^[ 　]*)|([ 　]*$)", "", nFlags);
        //删除段首尾空格
        break;
    case 10405:
        //VIP章节不规范标题预处理（为指定关键词所在字段添加括号）	
        document.selection.Replace("《", " 《", nFlags);
        document.selection.Replace("》", "》 ", nFlags);
        document.selection.Replace("　", " ", nFlags);
        //改成半角空格
        document.selection.Replace("(", " （", eeFindNext | eeReplaceAll);
        document.selection.Replace(")", "） ", eeFindNext | eeReplaceAll);
        //改成全角括号
        document.selection.Replace("(第[0-9一二三四五六七八九十两百千零〇]{1,7}[册集部卷章回节])",
            " \\1 ", nFlags);
        document.selection.Replace(" +", " ", nFlags);
        document.selection.Replace(" *$", "", nFlags);
        document.selection.Replace("^\\n", "", nFlags);
        var title1 = prompt("输入标题的第一个字词或空格分段（逐鹿卷 第2章），已分段则取消。",
            "“逐鹿卷”或“第[0-9一二三四五六七八九十两百零〇]{1,5}卷”，（卷部集章节回），只有一个字段可用空格");
        if (title1 != "") {
            document.selection.Replace("\\n", "", nFlags);
            document.selection.Replace("(" + title1 + ")", "\\n\\0", nFlags);
            document.selection.Replace("^[ ]*\\n", "", nFlags);
        }
        var title2 = prompt("为序数或关键词所在词组加括号“第三章 十一”。”",
                "[0-9一二三四五六七八九十两百]{1,5}") //
        if (title2 != "") {
            document.selection.Replace("(^.*) ([^ 0-9一二三四五六七八九十两百]*" + title2 +
                "[^ 0-9一二三四五六七八九十两百]*) (.*$)",
                "\\1 （\\2） \\3", nFlags);
            document.selection.Replace("第（", "第", nFlags);
            document.selection.Replace("）章", "章", nFlags);
        }
        document.selection.Replace("([ ]+)", " ", nFlags);
        //清除多余空格
        document.selection.Replace("(^[ 　]*)|([ 　]*$)", "", nFlags);
        //删除段首尾空格
        break;

    case 702:
        // 内容修正
        alert(
            "1.删除自定义关键词（广告句子）使用指南：\n\n必须仔细选用关键词，否则容易导致错误删除其他巧合的地方。\n尽量多选择几个关键词，关键词之间用（.*）分开，如果关键词之间没有空格最好用（[^ ]*）区分，这样效果最好。\n比如（推荐.+书号），（推荐.+书号.+作者）。\n\n对于ASCII乱码，复制一到两个多次出现的乱码作为关键词，因为可能有遗漏，应该反复多次运行直到完全清除。\n\n2.删除含无用内容的多个段落，特别适合于html另存为txt的内容中的没用的各种内容，包括抬头段，版权段，评论，等等各种各样的没有用处的东西。相当于排版脚本的手动版。对于不提供全文阅读和下载的网站小说比较适用。\n删除广告乱码以后，最好对全文做一次段落重整，统一段落。"
        )
        break;
    case 704:
        // 删除自定义关键词（广告句子）
        var insert = prompt("输入此段特有的关键词，或用（.+）分开的多个关键词。",
            "关键词1.+关键词2，可只输入一个关键词");
        if (insert != "") {
            document.selection.Replace(".*" + insert + ".*[。！”…]*", "", nFlags);
            document.selection.Replace("^[ ]+$", "", nFlags);
            document.selection.Replace("^\\n\\n\\n\\n", "\\n\\n", nFlags);
            document.selection.Replace("^\\n\\n\\n", "\\n\\n", nFlags);
            document.selection.Replace("(.+)\\n\\n(.+)", "\\1\\n\\2", nFlags);
        }
        break;
    case 705:
        //删除自定义关键词（广告段落）
        var insert = prompt("输入此段特有的关键词，或用（.+）分开的多个关键词。",
            "关键词1.+关键词2，可只输入一个关键词");
        if (insert != "") {
            document.selection.Replace(".*" + insert + ".*", "", nFlags);
            document.selection.Replace("^[ ]+$", "", nFlags);
            document.selection.Replace("^\\n\\n\\n\\n", "\\n\\n", nFlags);
            document.selection.Replace("^\\n\\n\\n", "\\n\\n", nFlags);
        } else {
            break;
        }
        break;
    case 706:
        //删除自定义关键词（多个广告段落）
        var insert = prompt("输入要删除的第一段开头特有的关键词，或用（.+）分开的多个关键词。",
            "关键词1.+关键词2，可只输入一个关键词")
        var insert1 = prompt("输入要删除的最后一段结尾特有的关键词，或用（.+）分开的多个关键词。",
            "关键词3.+关键词4，可只输入一个关键词");
        if (insert != "") {
            document.selection.Replace(".*" + insert + ".*", "込", nFlags);
            document.selection.Replace(".*" + insert1 + ".*", "肀", nFlags);
            var num = 1;
            var found = document.selection.Replace("込\\n[^肀]*", "込", nFlags);
            while (found) {
                num++;
                found = document.selection.Replace("込\\n[^肀]*", "込", nFlags);
            }
            document.selection.Replace("込", "", nFlags);
            document.selection.Replace("肀", "", nFlags);
            document.selection.Replace("^[ ]+$", "", nFlags);
            document.selection.Replace("^\\n\\n\\n\\n", "\\n\\n", nFlags);
            document.selection.Replace("^\\n\\n\\n", "\\n\\n", nFlags);
        }
        break;

    case 1000:
        //文中英文小写
        document.selection.Replace("A", "a", eeFindNext | eeReplaceAll);
        document.selection.Replace("B", "b", eeFindNext | eeReplaceAll);
        document.selection.Replace("C", "c", eeFindNext | eeReplaceAll);
        document.selection.Replace("D", "d", eeFindNext | eeReplaceAll);
        document.selection.Replace("E", "e", eeFindNext | eeReplaceAll);
        document.selection.Replace("F", "f", eeFindNext | eeReplaceAll);
        document.selection.Replace("G", "g", eeFindNext | eeReplaceAll);
        document.selection.Replace("H", "h", eeFindNext | eeReplaceAll);
        document.selection.Replace("I", "i", eeFindNext | eeReplaceAll);
        document.selection.Replace("J", "j", eeFindNext | eeReplaceAll);
        document.selection.Replace("K", "k", eeFindNext | eeReplaceAll);
        document.selection.Replace("L", "l", eeFindNext | eeReplaceAll);
        document.selection.Replace("M", "m", eeFindNext | eeReplaceAll);
        document.selection.Replace("N", "n", eeFindNext | eeReplaceAll);
        document.selection.Replace("O", "o", eeFindNext | eeReplaceAll);
        document.selection.Replace("P", "p", eeFindNext | eeReplaceAll);
        document.selection.Replace("Q", "q", eeFindNext | eeReplaceAll);
        document.selection.Replace("R", "r", eeFindNext | eeReplaceAll);
        document.selection.Replace("S", "s", eeFindNext | eeReplaceAll);
        document.selection.Replace("T", "t", eeFindNext | eeReplaceAll);
        document.selection.Replace("U", "u", eeFindNext | eeReplaceAll);
        document.selection.Replace("V", "v", eeFindNext | eeReplaceAll);
        document.selection.Replace("W", "w", eeFindNext | eeReplaceAll);
        document.selection.Replace("X", "x", eeFindNext | eeReplaceAll);
        document.selection.Replace("Y", "y", eeFindNext | eeReplaceAll);
        document.selection.Replace("Z", "z", eeFindNext | eeReplaceAll);
        break;
    case 703:
        //删除不规则乱码（数字字母符号）
        bAnswer = confirm(
            "1.本功能将清除2位以上的乱码，可能导致有残余乱码。\n\n2.可能会导致内文中使用的数字、英文、网址也被删除，请慎用，并仔细检查。"
        );
        if (bAnswer == true) {
            document.selection.Replace(
                "([\\x23-\\xff]+)(com|net|cn|org|edu)([\\x23-\\xff]*)",
                "肀\\1肀\\2肀\\3",
                nFlags);
            //保护网址
            var num = 1;
            var found = document.selection.Replace("(肀.)([^肀])", "\\1肀\\2",
                nFlags);
            while (found) {
                num++;
                found = document.selection.Replace("(肀.)([^肀])", "\\1肀\\2",
                    nFlags);
            }
            document.selection.Replace(
                "([^\\x23-\\xff]*)([\\d]+)([^\\x23-\\xff]*)", "\\1込\\2込\\3",
                nFlags);
            //连续数字分割保护
            document.selection.Replace(
                "([^\\x23-\\xff]*)([a-zA-Z]+)([^\\x23-\\xff]*)",
                "\\1込\\2込\\3", nFlags);
            //连续字母分割保护
            document.selection.Replace(
                "[0-9a-zA-Z]*込([\\x23-\\x26]|[\\x3A-\\x40]|[\\x5B-\\x60]|[\\x7B-\\xFF])*込[0-9a-zA-Z]*",
                "", nFlags);
            //删除连续字符
            document.selection.Replace("[0-9a-zA-Z]*込込[0-9a-zA-Z]*", "", nFlags);
            document.selection.Replace("[^込\\w][\\x23-\\xFF]{2,60}[^込\\w]", "",
                nFlags);
            //删除无保护字符
            document.selection.Replace(
                "([\\x23-\\x26]|[\\x3A-\\x40]|[\\x5B-\\x60]|[\\x7B-\\xFF]){2,60}",
                "", nFlags);
            //删除无保护连续字符
            document.selection.Replace("込", "", nFlags);
            document.selection.Replace("肀", "", nFlags);
        }
        break;
    case 187:
        //删除不规则乱码（仅非常用符号）
        bAnswer = confirm("务必先运行半角标点符号 → 全角标点符号 。");
        if (bAnswer == true) {
            document.selection.Replace("[\\x80-\\xFF]{2,60}", "", nFlags);
        }
        break;
    case 1111:
        //删除html代码（干扰乱码<FONT关键词</FONT>）
        document.selection.Replace("&nbsp;", " ", nFlags);
        bAnswer = confirm("是否删除这种形式：“<FONT COLOR=“#FFFFFF”>不可见干扰乱码</FONT>。");
        if (bAnswer == true) {
            document.selection.Replace(
                "<FONT COLOR=\x22#FFFFFF\x22>[^>]+</FONT>", "", nFlags);
        }
        document.selection.Replace(" *$", "", nFlags);
        document.selection.Replace("^\\n", "", nFlags);
        break;
    case 1110:
        //删除html代码（干扰乱码<SPAN关键词</SPAN>）
        document.selection.Replace("&nbsp;", " ", nFlags);
        bAnswer = confirm(
            "1.是否删除这种形式：“<SPAN STYLE=\x22DISPLAY:NONE\x22>不可见干扰乱码</SPAN>。");
        if (bAnswer == true) {
            document.selection.Replace("<span style..display.none.>.+<\/span>",
                "", nFlags);
        }
        var insert1 = prompt("2.删除代码段：<SPAN...>关键词</SPAN>。", "关键词，不能只输入一点");
        if (insert1 != "") {
            document.selection.Replace("<(SPAN[^>]+)>", "<\\1>込\\n", nFlags);
            document.selection.Replace("</SPAN>", "\\n肀</SPAN>", nFlags);
            document.selection.Replace("^[ ]*\\n", "", nFlags);
            var num = 1;
            var found = document.selection.Replace("\\n([^込]*)(" + insert1 +
                ")", "\\2", nFlags);
            while (found) {
                num++;
                found = document.selection.Replace("\\n([^込]*)(" + insert1 +
                    ")", "\\2", nFlags);
            }
            var found1 = document.selection.Replace("(" + insert1 +
                ")([^肀]*)\\n", "\\1", nFlags);
            while (found1) {
                num++;
                found1 = document.selection.Replace("(" + insert1 +
                    ")([^肀]*)\\n", "\\1", nFlags);
            }
            document.selection.Replace("\\n(.*)(" + insert1 + ")(.*)\\n",
                "\\1\\2\\3", nFlags);
            document.selection.Replace("<SPAN.*SPAN>", "", nFlags);
            document.selection.Replace("<(SPAN[^>]+)>込", "<\\1>", nFlags);
            document.selection.Replace("肀</SPAN>", "<\/SPAN>", nFlags);
        }
        document.selection.Replace(" *$", "", nFlags);
        document.selection.Replace("^\\n", "", nFlags);
        break;
    case 1100:
        //HTML内容修正
        alert(
            "HTML内容修正使用说明：替换或删除	<SCRIPT src=[^>]*关键词</SCRIPT>。\n\n1.对一行的内容操作。\n不需要的话直接取消。\n2.关键词一定要准确，并且尽可能多用几个，以免删除了其它不相关的内容，最好事先要备份，并且使用撤销功能发现错误。"
        )
        break;
    case 1101:
        //删除html代码（<DIV关键词</DIV>）
        document.selection.Replace("^[ ]*<", "<", nFlags);
        var insert = prompt("1.删除代码行：<DIV...>关键词</DIV>", "关键词，不能只输入一点");
        if (insert != "") {
            document.selection.Replace("<DIV[^>]*" + insert + "[^>]*></DIV>",
                "", nFlags);
        }
        var insert1 = prompt("2.删除代码段：<DIV...>关键词</DIV>。", "关键词，不能只输入一点");
        if (insert1 != "") {
            document.selection.Replace("(<(DIV[^>]+)>)", "\\1込\\n", nFlags);
            document.selection.Replace("</DIV>", "\\n肀</DIV>", nFlags);
            document.selection.Replace("^[ ]*\\n", "", nFlags);
            var num = 1;
            var found = document.selection.Replace("\\n([^込]*)(" + insert1 +
                ")", "\\2", nFlags);
            while (found) {
                num++;
                found = document.selection.Replace("\\n([^込]*)(" + insert1 +
                    ")", "\\2", nFlags);
            }
            var found1 = document.selection.Replace("(" + insert1 +
                ")([^肀]*)\\n", "\\1", nFlags);
            while (found1) {
                num++;
                found1 = document.selection.Replace("(" + insert1 +
                    ")([^肀]*)\\n", "\\1", nFlags);
            }
            document.selection.Replace("\\n(.*)(" + insert1 + ")(.*)\\n",
                "\\1\\2\\3", nFlags);
            document.selection.Replace("<DIV.*DIV>", "", nFlags);
            document.selection.Replace("<(DIV[^>]+)>込", "<\\1>", nFlags);
            document.selection.Replace("肀</DIV>", "<\/DIV>", nFlags);
        }
        document.selection.Replace(" *$", " ", nFlags);
        document.selection.Replace("^\\n", "", nFlags);
        break;
    case 1102:
        //题头<META content=关键词>
        document.selection.Replace("^[ ]*<", "<", nFlags);
        var insert = prompt("删除代码：<META content=关键词>", "关键词，可只输一点“.”删除所有同类型");
        if (insert != "") {
            document.selection.Replace("<META content=[^>]*" + insert +
                "[^>]*>>", "", nFlags);
        }
        document.selection.Replace(" *$", " ", nFlags);
        document.selection.Replace("^\\n", "", nFlags);
        break;
    case 1109:
        //删除html代码（广告脚本SCRIPT）
        document.selection.Replace("^[ ]*<", "<", nFlags);
        var insert = prompt("1.删除代码行：<SCRIPT src= 广告</SCRIPT>。",
            "关键词，或只输一点“.”删除所有同类型");
        if (insert != "") {
            document.selection.Replace("<SCRIPT src=[^>]*" + insert +
                "[^>]*><\/SCRIPT>", "", nFlags);
        }
        bAnswer = confirm("2.删除代码段：<SCRIPT>任意广告脚本</SCRIPT>");
        if (bAnswer == true) {
            document.selection.Replace("<SCRIPT>", "<SCRIPT>\\n", nFlags);
            document.selection.Replace("</SCRIPT>", "\\n肀</SCRIPT>", nFlags);
            var num = 1;
            var found = document.selection.Replace("<SCRIPT>\\n[^肀]*",
                "<SCRIPT>", nFlags);
            while (found) {
                num++;
                found = document.selection.Replace("<SCRIPT>\\n[^肀]*",
                    "<SCRIPT>", nFlags);
            }
            document.selection.Replace("<SCRIPT>[^>]*SCRIPT>", "", nFlags);
            document.selection.Replace("肀</SCRIPT>", "</SCRIPT>", nFlags);
        }
        document.selection.Replace(" *$", " ", nFlags);
        document.selection.Replace("^\\n", "", nFlags);
        break;
    case 1103:
        //删除html代码（文本链接<A href=关键词</A>）
        var insert = prompt("删除代码：<A href=关键词</A>", "关键词，或只输一点“.”删除所有同类型");
        if (insert != "") {
            document.selection.Replace("<A href=[^>]*" + insert + "[^>]*><\/A>",
                "", nFlags);
        }
        document.selection.Replace(" *$", " ", nFlags);
        document.selection.Replace(" *$", "", nFlags);
        document.selection.Replace("^\\n", "", nFlags);
        break;
    case 1104:
        //删除html代码（图片链接<IMG关键词>）
        var insert = prompt("删除代码行：<IMG关键词></IMG>", "关键词，或只输一点“.”删除所有同类型");
        if (insert != "") {
            document.selection.Replace("<IMG[^>]*" + insert + "[^>]*><\/IMG>",
                "", nFlags);
        }
        document.selection.Replace(" *$", " ", nFlags);
        document.selection.Replace("^\\n", "", nFlags);
        break;
    case 1105:
        //删除html代码（整行<TD>关键词</TD>）
        var insert = prompt("1.删除代码行：<TD>关键词</TD>", "关键词，或只输一点“.”删除所有同类型");
        if (insert != "") {
            document.selection.Replace("<TD[^>]*" + insert + "[^>]*></TD>", "",
                nFlags);
        }
        var insert1 = prompt("2.删除代码段：<TD...>关键词</TD>。", "关键词，不能只输入一点");
        if (insert1 != "") {
            document.selection.Replace("<(TD[^>]+)>", "<\\1>込\\n", nFlags);
            document.selection.Replace("</TD>", "\\n肀</TD>", nFlags);
            document.selection.Replace("^[ ]*\\n", "", nFlags);
            var num = 1;
            var found = document.selection.Replace("\\n([^込]*)(" + insert1 +
                ")", "\\2", nFlags);
            while (found) {
                num++;
                found = document.selection.Replace("\\n([^込]*)(" + insert1 +
                    ")", "\\2", nFlags);
            }
            var found1 = document.selection.Replace("(" + insert1 +
                ")([^肀]*)\\n", "\\1", nFlags);
            while (found1) {
                num++;
                found1 = document.selection.Replace("(" + insert1 +
                    ")([^肀]*)\\n", "\\1", nFlags);
            }
            document.selection.Replace("\\n(.*)(" + insert1 + ")(.*)\\n",
                "\\1\\2\\3", nFlags);
            document.selection.Replace("<TD.*TD>", "", nFlags);
            document.selection.Replace("<(TD[^>]*)>込", "<\\1>", nFlags);
            document.selection.Replace("肀</TD>", "<\/TD>", nFlags);
        }
        document.selection.Replace(" *$", " ", nFlags);
        document.selection.Replace("^\\n", "", nFlags);
        break;
    case 1106:
        //删除html代码（整段<TR>关键词</TR>）
        var insert = prompt("1.删除代码行：<TR>关键词</TR>", "关键词，或只输一点“.”删除所有同类型");
        if (insert != "") {
            document.selection.Replace("<TR>[^>]*" + insert + "[^>]*</TR>", "",
                nFlags);
        }
        var insert1 = prompt("2.删除代码段：<TR...>关键词</TR>。", "关键词，不能只输入一点");
        if (insert1 != "") {
            document.selection.Replace("<(TR[^>]*)>", "<\\1>込\\n", nFlags);
            document.selection.Replace("</TR>", "\\n肀</TR>", nFlags);
            document.selection.Replace("^[ ]*\\n", "", nFlags);
            var num = 1;
            var found = document.selection.Replace("\\n([^込]*)(" + insert1 +
                ")", "\\2", nFlags);
            while (found) {
                num++;
                found = document.selection.Replace("\\n([^込]*)(" + insert1 +
                    ")", "\\2", nFlags);
            }
            var found1 = document.selection.Replace("(" + insert1 +
                ")([^肀]*)\\n", "\\1", nFlags);
            while (found1) {
                num++;
                found1 = document.selection.Replace("(" + insert1 +
                    ")([^肀]*)\\n", "\\1", nFlags);
            }
            document.selection.Replace("\\n(.*)(" + insert1 + ")(.*)\\n",
                "\\1\\2\\3", nFlags);
            document.selection.Replace("<TR.*TR>", "", nFlags);
            document.selection.Replace("<(TR[^>]*)>込", "<\\1>", nFlags);
            document.selection.Replace("肀</TR>", "<\/TR>", nFlags);
        }
        document.selection.Replace(" *$", " ", nFlags);
        document.selection.Replace("^\\n", "", nFlags);
        break;
    case 1107:
        //删除html代码（表格<TABLE关键词</TABLE>）
        var insert = prompt("1.删除代码行：<TABLE>关键词</TABLE>", "关键词，或只输一点“.”删除所有同类型");
        if (insert != "") {
            document.selection.Replace("<TABLE[^>]*" + insert +
                "[^>]*></TABLE>", "", nFlags);
        }
        var insert1 = prompt("2.删除代码段：<TABLE...>关键词</TABLE>。", "关键词，不能只输入一点");
        if (insert1 != "") {
            document.selection.Replace("<(TABLE[^>]*)>", "<\\1>込\\n", nFlags);
            document.selection.Replace("</TABLE>", "\\n肀</TABLE>", nFlags);
            document.selection.Replace("^[ ]*\\n", "", nFlags);
            var num = 1;
            var found = document.selection.Replace("\\n([^込]*)(" + insert1 +
                ")", "\\2", nFlags);
            while (found) {
                num++;
                found = document.selection.Replace("\\n([^込]*)(" + insert1 +
                    ")", "\\2", nFlags);
            }
            var found1 = document.selection.Replace("(" + insert1 +
                ")([^肀]*)\\n", "\\1", nFlags);
            while (found1) {
                num++;
                found1 = document.selection.Replace("(" + insert1 +
                    ")([^肀]*)\\n", "\\1", nFlags);
            }
            document.selection.Replace("\\n(.*)(" + insert1 + ")(.*)\\n",
                "\\1\\2\\3", nFlags);
            document.selection.Replace("<TABLE.*TABLE>", "", nFlags);
            document.selection.Replace("<(TABLE[^>]*)>込", "<\\1>", nFlags);
            document.selection.Replace("肀</TABLE>", "<\/TABLE>", nFlags);
        }
        document.selection.Replace(" *$", " ", nFlags);
        document.selection.Replace("^\\n", "", nFlags);
        break;
    case 1108:
        //删除html代码（<IFRAME关键词</IFRAME>）
        var insert = prompt("删除代码：<IFRAME关键词></IFRAME>", "关键词，或只输一点“.”删除所有同类型");
        if (insert != "") {
            document.selection.Replace("<IFRAME[^>]*" + insert +
                "[^>]*></IFRAME>", "", nFlags);
        }
        document.selection.Replace(" *$", "", nFlags);
        document.selection.Replace("^\\n", "", nFlags);
        break;
    case 10813:
        document.selection.Replace("\\n\\n", "<ENTER>", nFlags);
        document.selection.Replace("\\n", "", nFlags);
        document.selection.Replace("<ENTER>", "\\n", nFlags);
    default:
}